Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    blinky.o(.text.app_initialize) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    blinky.o(.text.app_initialize) refers to blinky.o(.text.app_main) for app_main
    blinky.o(.ARM.exidx.text.app_initialize) refers to blinky.o(.text.app_initialize) for [Anonymous Symbol]
    blinky.o(.text.app_main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    blinky.o(.text.app_main) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    blinky.o(.text.app_main) refers to blinky.o(.text.thrLED) for thrLED
    blinky.o(.text.app_main) refers to blinky.o(.bss.tid_thrLED) for [Anonymous Symbol]
    blinky.o(.text.app_main) refers to blinky.o(.text.thrButton) for thrButton
    blinky.o(.text.app_main) refers to blinky.o(.bss.tid_thrButton) for [Anonymous Symbol]
    blinky.o(.ARM.exidx.text.app_main) refers to blinky.o(.text.app_main) for [Anonymous Symbol]
    blinky.o(.text.thrLED) refers to vio_stm32g071b-disco.o(.text.vioSetSignal) for vioSetSignal
    blinky.o(.text.thrLED) refers to rtx_delay.o(.text.osDelay) for osDelay
    blinky.o(.text.thrLED) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    blinky.o(.ARM.exidx.text.thrLED) refers to blinky.o(.text.thrLED) for [Anonymous Symbol]
    blinky.o(.text.thrButton) refers to rtx_delay.o(.text.osDelay) for osDelay
    blinky.o(.text.thrButton) refers to vio_stm32g071b-disco.o(.text.vioGetSignal) for vioGetSignal
    blinky.o(.text.thrButton) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    blinky.o(.text.thrButton) refers to blinky.o(.bss.tid_thrLED) for [Anonymous Symbol]
    blinky.o(.ARM.exidx.text.thrButton) refers to blinky.o(.text.thrButton) for [Anonymous Symbol]
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(.text.HAL_GetTick) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.text.HAL_GetTick) refers to main.o(.bss.HAL_GetTick.ticks) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.HAL_GetTick) refers to main.o(.text.HAL_GetTick) for [Anonymous Symbol]
    main.o(.text.main) refers to stm32g0xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to rt_memclr.o(.text) for __aeabi_memclr4
    main.o(.text.main) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for HAL_PWREx_ControlVoltageScaling
    main.o(.text.main) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.main) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.text.main) refers to system_stm32g0xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to vio_stm32g071b-disco.o(.text.vioInit) for vioInit
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to blinky.o(.text.app_initialize) for app_initialize
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.text.main) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    main.o(.text.main) refers to stm32g0xx_hal.o(.text.HAL_Delay) for HAL_Delay
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to rt_memclr.o(.text) for __aeabi_memclr4
    main.o(.text.SystemClock_Config) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for HAL_PWREx_ControlVoltageScaling
    main.o(.text.SystemClock_Config) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32g0xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32g0xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_GetVersion) refers to stm32g071b_discovery.o(.text.BSP_GetVersion) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_LED_Init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32g071b_discovery.o(.text.BSP_LED_Init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    stm32g071b_discovery.o(.text.BSP_LED_Init) refers to stm32g071b_discovery.o(.rodata.LED_PIN) for LED_PIN
    stm32g071b_discovery.o(.text.BSP_LED_Init) refers to stm32g071b_discovery.o(.data.LED_PORT) for LED_PORT
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_LED_Init) refers to stm32g071b_discovery.o(.text.BSP_LED_Init) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_LED_DeInit) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32g071b_discovery.o(.text.BSP_LED_DeInit) refers to stm32g071b_discovery.o(.data.LED_PORT) for LED_PORT
    stm32g071b_discovery.o(.text.BSP_LED_DeInit) refers to stm32g071b_discovery.o(.rodata.LED_PIN) for LED_PIN
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_LED_DeInit) refers to stm32g071b_discovery.o(.text.BSP_LED_DeInit) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_LED_On) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    stm32g071b_discovery.o(.text.BSP_LED_On) refers to stm32g071b_discovery.o(.data.LED_PORT) for LED_PORT
    stm32g071b_discovery.o(.text.BSP_LED_On) refers to stm32g071b_discovery.o(.rodata.LED_PIN) for LED_PIN
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_LED_On) refers to stm32g071b_discovery.o(.text.BSP_LED_On) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_LED_Off) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    stm32g071b_discovery.o(.text.BSP_LED_Off) refers to stm32g071b_discovery.o(.data.LED_PORT) for LED_PORT
    stm32g071b_discovery.o(.text.BSP_LED_Off) refers to stm32g071b_discovery.o(.rodata.LED_PIN) for LED_PIN
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_LED_Off) refers to stm32g071b_discovery.o(.text.BSP_LED_Off) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_LED_Toggle) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for HAL_GPIO_TogglePin
    stm32g071b_discovery.o(.text.BSP_LED_Toggle) refers to stm32g071b_discovery.o(.data.LED_PORT) for LED_PORT
    stm32g071b_discovery.o(.text.BSP_LED_Toggle) refers to stm32g071b_discovery.o(.rodata.LED_PIN) for LED_PIN
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_LED_Toggle) refers to stm32g071b_discovery.o(.text.BSP_LED_Toggle) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_JOY_Init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32g071b_discovery.o(.text.BSP_JOY_Init) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32g071b_discovery.o(.text.BSP_JOY_Init) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32g071b_discovery.o(.text.BSP_JOY_Init) refers to stm32g071b_discovery.o(.rodata.JOY_PIN) for JOY_PIN
    stm32g071b_discovery.o(.text.BSP_JOY_Init) refers to stm32g071b_discovery.o(.data.JOY_PORT) for JOY_PORT
    stm32g071b_discovery.o(.text.BSP_JOY_Init) refers to stm32g071b_discovery.o(.rodata.JOY_IRQn) for JOY_IRQn
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_JOY_Init) refers to stm32g071b_discovery.o(.text.BSP_JOY_Init) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_JOY_DeInit) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32g071b_discovery.o(.text.BSP_JOY_DeInit) refers to stm32g071b_discovery.o(.data.JOY_PORT) for JOY_PORT
    stm32g071b_discovery.o(.text.BSP_JOY_DeInit) refers to stm32g071b_discovery.o(.rodata.JOY_PIN) for JOY_PIN
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_JOY_DeInit) refers to stm32g071b_discovery.o(.text.BSP_JOY_DeInit) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_JOY_GetState) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    stm32g071b_discovery.o(.text.BSP_JOY_GetState) refers to stm32g071b_discovery.o(.data.JOY_PORT) for JOY_PORT
    stm32g071b_discovery.o(.text.BSP_JOY_GetState) refers to stm32g071b_discovery.o(.rodata.JOY_PIN) for JOY_PIN
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_JOY_GetState) refers to stm32g071b_discovery.o(.text.BSP_JOY_GetState) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_MOSFET_Init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32g071b_discovery.o(.text.BSP_MOSFET_Init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    stm32g071b_discovery.o(.text.BSP_MOSFET_Init) refers to stm32g071b_discovery.o(.rodata.MOSFET_PIN) for MOSFET_PIN
    stm32g071b_discovery.o(.text.BSP_MOSFET_Init) refers to stm32g071b_discovery.o(.data.MOSFET_PORT) for MOSFET_PORT
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_MOSFET_Init) refers to stm32g071b_discovery.o(.text.BSP_MOSFET_Init) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_MOSFET_DeInit) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32g071b_discovery.o(.text.BSP_MOSFET_DeInit) refers to stm32g071b_discovery.o(.data.MOSFET_PORT) for MOSFET_PORT
    stm32g071b_discovery.o(.text.BSP_MOSFET_DeInit) refers to stm32g071b_discovery.o(.rodata.MOSFET_PIN) for MOSFET_PIN
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_MOSFET_DeInit) refers to stm32g071b_discovery.o(.text.BSP_MOSFET_DeInit) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_MOSFET_On) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    stm32g071b_discovery.o(.text.BSP_MOSFET_On) refers to stm32g071b_discovery.o(.data.MOSFET_PORT) for MOSFET_PORT
    stm32g071b_discovery.o(.text.BSP_MOSFET_On) refers to stm32g071b_discovery.o(.rodata.MOSFET_PIN) for MOSFET_PIN
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_MOSFET_On) refers to stm32g071b_discovery.o(.text.BSP_MOSFET_On) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_MOSFET_Off) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    stm32g071b_discovery.o(.text.BSP_MOSFET_Off) refers to stm32g071b_discovery.o(.data.MOSFET_PORT) for MOSFET_PORT
    stm32g071b_discovery.o(.text.BSP_MOSFET_Off) refers to stm32g071b_discovery.o(.rodata.MOSFET_PIN) for MOSFET_PIN
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_MOSFET_Off) refers to stm32g071b_discovery.o(.text.BSP_MOSFET_Off) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_DOOR_Init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32g071b_discovery.o(.text.BSP_DOOR_Init) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32g071b_discovery.o(.text.BSP_DOOR_Init) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_DOOR_Init) refers to stm32g071b_discovery.o(.text.BSP_DOOR_Init) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_DOOR_DeInit) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_DOOR_DeInit) refers to stm32g071b_discovery.o(.text.BSP_DOOR_DeInit) for [Anonymous Symbol]
    stm32g071b_discovery.o(.text.BSP_DOOR_GetState) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    stm32g071b_discovery.o(.ARM.exidx.text.BSP_DOOR_GetState) refers to stm32g071b_discovery.o(.text.BSP_DOOR_GetState) for [Anonymous Symbol]
    irq_armv6m.o(.text) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    irq_armv6m.o(.text) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    irq_armv6m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv6m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv6m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv6m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv6m.o(.ARM.exidx) refers to irq_armv6m.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for EvrRtxDelay
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for EvrRtxDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for EvrRtxDelayStarted
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for EvrRtxDelayUntilStarted
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryAlloc) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialized) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetInfo) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelRestoreLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLockRestored) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickFreq) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelErrorNotify) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetId) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetState) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadYield) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetach) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetached) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoin) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoinPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoined) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadBlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadUnblocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPreempted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSwitched) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadExit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadTerminate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadEnumerate) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError) refers to rtx_evr.o(.text.EvrRtxDelayError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelay) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntil) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntilStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCallback) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStop) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStopped) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerIsRunning) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetOwner) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFree) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePut) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGet) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueReset) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueResetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for EvrRtxKernelErrorNotify
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_lib.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv6m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.osRtxKernelPreInit) refers to eventrecorder.o(.text.EventRecorderInitialize) for EventRecorderInitialize
    rtx_lib.o(.text.osRtxKernelPreInit) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    rtx_lib.o(.text.osRtxKernelPreInit) refers to eventrecorder.o(.text.EventRecorderDisable) for EventRecorderDisable
    rtx_lib.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_lib.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv6m.o(.rodata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for EvrRtxThreadPriorityUpdated
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioInit) refers to rt_memclr.o(.text) for __aeabi_memclr4
    vio_stm32g071b-disco.o(.text.vioInit) refers to stm32g071b_discovery.o(.text.BSP_LED_Init) for BSP_LED_Init
    vio_stm32g071b-disco.o(.text.vioInit) refers to stm32g071b_discovery.o(.text.BSP_JOY_Init) for BSP_JOY_Init
    vio_stm32g071b-disco.o(.text.vioInit) refers to vio_stm32g071b-disco.o(.bss.vioSignalOut) for vioSignalOut
    vio_stm32g071b-disco.o(.text.vioInit) refers to vio_stm32g071b-disco.o(.bss.vioSignalIn) for vioSignalIn
    vio_stm32g071b-disco.o(.text.vioInit) refers to vio_stm32g071b-disco.o(.bss.vioPrintMem) for vioPrintMem
    vio_stm32g071b-disco.o(.text.vioInit) refers to vio_stm32g071b-disco.o(.bss.vioValue) for vioValue
    vio_stm32g071b-disco.o(.text.vioInit) refers to vio_stm32g071b-disco.o(.bss.vioValueXYZ) for vioValueXYZ
    vio_stm32g071b-disco.o(.text.vioInit) refers to vio_stm32g071b-disco.o(.bss.vioAddrIPv4) for vioAddrIPv4
    vio_stm32g071b-disco.o(.text.vioInit) refers to vio_stm32g071b-disco.o(.bss.vioAddrIPv6) for vioAddrIPv6
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioInit) refers to vio_stm32g071b-disco.o(.text.vioInit) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioPrint) refers to vsnprintf.o(.text) for vsnprintf
    vio_stm32g071b-disco.o(.text.vioPrint) refers to vio_stm32g071b-disco.o(.bss.vioPrintMem) for vioPrintMem
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioPrint) refers to vio_stm32g071b-disco.o(.text.vioPrint) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioSetSignal) refers to stm32g071b_discovery.o(.text.BSP_LED_Off) for BSP_LED_Off
    vio_stm32g071b-disco.o(.text.vioSetSignal) refers to stm32g071b_discovery.o(.text.BSP_LED_On) for BSP_LED_On
    vio_stm32g071b-disco.o(.text.vioSetSignal) refers to vio_stm32g071b-disco.o(.bss.vioSignalOut) for vioSignalOut
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioSetSignal) refers to vio_stm32g071b-disco.o(.text.vioSetSignal) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioGetSignal) refers to stm32g071b_discovery.o(.text.BSP_JOY_GetState) for BSP_JOY_GetState
    vio_stm32g071b-disco.o(.text.vioGetSignal) refers to vio_stm32g071b-disco.o(.bss.vioSignalIn) for vioSignalIn
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioGetSignal) refers to vio_stm32g071b-disco.o(.text.vioGetSignal) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioSetValue) refers to vio_stm32g071b-disco.o(.bss.vioValue) for vioValue
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioSetValue) refers to vio_stm32g071b-disco.o(.text.vioSetValue) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioGetValue) refers to vio_stm32g071b-disco.o(.bss.vioValue) for vioValue
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioGetValue) refers to vio_stm32g071b-disco.o(.text.vioGetValue) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioSetXYZ) refers to vio_stm32g071b-disco.o(.bss.vioValueXYZ) for vioValueXYZ
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioSetXYZ) refers to vio_stm32g071b-disco.o(.text.vioSetXYZ) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioGetXYZ) refers to vio_stm32g071b-disco.o(.bss.vioValueXYZ) for vioValueXYZ
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioGetXYZ) refers to vio_stm32g071b-disco.o(.text.vioGetXYZ) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioSetIPv4) refers to vio_stm32g071b-disco.o(.bss.vioAddrIPv4) for vioAddrIPv4
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioSetIPv4) refers to vio_stm32g071b-disco.o(.text.vioSetIPv4) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioGetIPv4) refers to vio_stm32g071b-disco.o(.bss.vioAddrIPv4) for vioAddrIPv4
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioGetIPv4) refers to vio_stm32g071b-disco.o(.text.vioGetIPv4) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioSetIPv6) refers to vio_stm32g071b-disco.o(.bss.vioAddrIPv6) for vioAddrIPv6
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioSetIPv6) refers to vio_stm32g071b-disco.o(.text.vioSetIPv6) for [Anonymous Symbol]
    vio_stm32g071b-disco.o(.text.vioGetIPv6) refers to rt_memclr.o(.text) for __aeabi_memclr
    vio_stm32g071b-disco.o(.text.vioGetIPv6) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    vio_stm32g071b-disco.o(.text.vioGetIPv6) refers to vio_stm32g071b-disco.o(.bss.vioAddrIPv6) for vioAddrIPv6
    vio_stm32g071b-disco.o(.ARM.exidx.text.vioGetIPv6) refers to vio_stm32g071b-disco.o(.text.vioGetIPv6) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerSetup) refers to eventrecorder.o(.bss.SysTimerState) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for osKernelGetSysTimerFreq
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.bss.SysTimerState) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetCount) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    eventrecorder.o(.text.EventRecorderTimerGetCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for osKernelGetSysTimerCount
    eventrecorder.o(.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.bss.SysTimerState) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to rt_memclr.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.TS_OverflowLock) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecordItem) refers to eventrecorder.o(.text.EventRecordItem) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.TS_OverflowLock) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.TS_OverflowLock) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.TS_OverflowLock) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecordData) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.bss.TS_OverflowLock) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.bss.TS_OverflowLock) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.bss.TS_OverflowLock) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_Init) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal.o(.text.HAL_Init) refers to stm32g0xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32g0xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to stm32g0xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to stm32g0xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32g0xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_DeInit) refers to stm32g0xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32g0xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32g0xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_IncTick) refers to stm32g0xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32g0xx_hal.o(.text.HAL_IncTick) refers to stm32g0xx_hal.o(.bss.uwTick) for uwTick
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32g0xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_GetTick) refers to stm32g0xx_hal.o(.bss.uwTick) for uwTick
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_GetTickPrio) refers to stm32g0xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32g0xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_SetTickFreq) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal.o(.text.HAL_SetTickFreq) refers to stm32g0xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32g0xx_hal.o(.text.HAL_SetTickFreq) refers to stm32g0xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32g0xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_GetTickFreq) refers to stm32g0xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32g0xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_Delay) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal.o(.text.HAL_Delay) refers to stm32g0xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32g0xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32g0xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32g0xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32g0xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32g0xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32g0xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32g0xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32g0xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32g0xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_TrimmingConfig) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_VREFBUF_TrimmingConfig) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableVREFBUF) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableVREFBUF) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableVREFBUF) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableVREFBUF) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableVREFBUF) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableRemap) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableRemap) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableRemap) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableRemap) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_StrobeDBattpinsConfig) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_StrobeDBattpinsConfig) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32g0xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32g0xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32g0xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.text.HAL_DMA_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxSync) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxSync) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxRequestGenerator) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxRequestGenerator) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_EnableMuxRequestGenerator) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_EnableMuxRequestGenerator) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_DisableMuxRequestGenerator) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_DisableMuxRequestGenerator) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MUX_IRQHandler) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_MUX_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetHandle) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetPending) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearPending) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Rising_Callback) for HAL_GPIO_EXTI_Rising_Callback
    stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Falling_Callback) for HAL_GPIO_EXTI_Falling_Callback
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Rising_Callback) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Rising_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Falling_Callback) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Falling_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode) for HAL_PWREx_EnableLowPowerRunMode
    stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) for HAL_PWREx_DisableLowPowerRunMode
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBatteryCharging) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePORMonitorSampling) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePORMonitorSampling) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePORMonitorSampling) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePORMonitorSampling) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ConfigPVD) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigPVD) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePVD) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePVD) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePVD) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePVD) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableInternalWakeUpLine) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableInternalWakeUpLine) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableInternalWakeUpLine) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableInternalWakeUpLine) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullUp) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullUp) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullUp) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullUp) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePullUpPullDownConfig) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePullUpPullDownConfig) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePullUpPullDownConfig) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePullUpPullDownConfig) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableSRAMRetention) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableSRAMRetention) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableSRAMRetention) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableSRAMRetention) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSHUTDOWNMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSHUTDOWNMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_IRQHandler) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_Rising_Callback) for HAL_PWREx_PVD_Rising_Callback
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_IRQHandler) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_Falling_Callback) for HAL_PWREx_PVD_Falling_Callback
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVD_IRQHandler) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVD_Rising_Callback) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_Rising_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVD_Falling_Callback) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_Falling_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32g0xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32g0xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableLSECSS) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableLSECSS) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableLSECSS) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_DisableLSECSS) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_LSECSSCallback) for HAL_RCC_LSECSSCallback
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_LSECSSCallback) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_LSECSSCallback) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetResetSource) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetResetSource) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) for [Anonymous Symbol]
    stm32g0xx_hal_msp.o(.text.HAL_MspInit) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32g0xx_hal_msp.o(.text.HAL_MspInit) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_StrobeDBattpinsConfig) for HAL_SYSCFG_StrobeDBattpinsConfig
    stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32g0xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    startup_stm32g071xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g071xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g071xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g071xx.o(RESET) refers to startup_stm32g071xx.o(STACK) for __initial_sp
    startup_stm32g071xx.o(RESET) refers to startup_stm32g071xx.o(.text) for Reset_Handler
    startup_stm32g071xx.o(RESET) refers to stm32g0xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32g071xx.o(RESET) refers to stm32g0xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32g071xx.o(RESET) refers to irq_armv6m.o(.text) for SVC_Handler
    startup_stm32g071xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g071xx.o(.text) refers to system_stm32g0xx.o(.text.SystemInit) for SystemInit
    startup_stm32g071xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32g071xx.o(.text) refers to startup_stm32g071xx.o(HEAP) for Heap_Mem
    startup_stm32g071xx.o(.text) refers to startup_stm32g071xx.o(STACK) for Stack_Mem
    system_stm32g0xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32g0xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32g0xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    vsnprintf.o(.text) refers (Special) to _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) for _printf_a
    vsnprintf.o(.text) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    vsnprintf.o(.text) refers (Special) to _printf_charcount.o(.text) for _printf_charcount
    vsnprintf.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    vsnprintf.o(.text) refers (Special) to _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) for _printf_e
    vsnprintf.o(.text) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    vsnprintf.o(.text) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    vsnprintf.o(.text) refers (Special) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    vsnprintf.o(.text) refers (Special) to _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) for _printf_g
    vsnprintf.o(.text) refers (Special) to _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) for _printf_i
    vsnprintf.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    vsnprintf.o(.text) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    vsnprintf.o(.text) refers (Special) to _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) for _printf_lc
    vsnprintf.o(.text) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    vsnprintf.o(.text) refers (Special) to _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) for _printf_lld
    vsnprintf.o(.text) refers (Special) to _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) for _printf_lli
    vsnprintf.o(.text) refers (Special) to _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) for _printf_llo
    vsnprintf.o(.text) refers (Special) to _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) for _printf_llu
    vsnprintf.o(.text) refers (Special) to _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) for _printf_llx
    vsnprintf.o(.text) refers (Special) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    vsnprintf.o(.text) refers (Special) to _printf_hex_int_ll_ptr.o(.text) for _printf_longlong_hex
    vsnprintf.o(.text) refers (Special) to _printf_oct_int_ll.o(.text) for _printf_longlong_oct
    vsnprintf.o(.text) refers (Special) to _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) for _printf_ls
    vsnprintf.o(.text) refers (Special) to _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) for _printf_n
    vsnprintf.o(.text) refers (Special) to _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) for _printf_o
    vsnprintf.o(.text) refers (Special) to _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) for _printf_p
    vsnprintf.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    vsnprintf.o(.text) refers (Special) to _printf_pad.o(.text) for _printf_post_padding
    vsnprintf.o(.text) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    vsnprintf.o(.text) refers (Special) to _printf_str.o(.text) for _printf_str
    vsnprintf.o(.text) refers (Special) to _printf_truncate.o(.text) for _printf_truncate_signed
    vsnprintf.o(.text) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    vsnprintf.o(.text) refers (Special) to _printf_wctomb.o(.text) for _printf_wctomb
    vsnprintf.o(.text) refers (Special) to _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) for _printf_x
    vsnprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    vsnprintf.o(.text) refers to _snputc.o(.text) for _snputc
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_dec.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_signed
    _printf_dec.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_dec.o(.text) refers to rtudiv10.o(.text) for __rt_udiv10
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_char_common.o(.text) refers to __printf_flags_ss_wp.o(.text) for __printf
    _printf_wctomb.o(.text) refers (Special) to _printf_wchar.o(.text) for _printf_lcs_common
    _printf_wctomb.o(.text) refers to _c16rtomb.o(.text) for _wcrtomb
    _printf_wctomb.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_wctomb.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_wctomb.o(.text) refers to _printf_wctomb.o(.constdata) for .constdata
    _printf_wctomb.o(.constdata) refers (Special) to _printf_wchar.o(.text) for _printf_lcs_common
    _printf_longlong_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_longlong_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_oct_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int_ll.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll.o(.text) refers to _printf_hex_ll.o(.constdata) for .constdata
    _printf_hex_int.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int.o(.text) refers to _printf_hex_int.o(.constdata) for .constdata
    _printf_hex_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ll.o(.text) refers to _printf_hex_int_ll.o(.constdata) for .constdata
    _printf_hex_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ptr.o(.text) refers to _printf_hex_ptr.o(.constdata) for .constdata
    _printf_hex_int_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ptr.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ptr.o(.text) refers to _printf_hex_int_ptr.o(.constdata) for .constdata
    _printf_hex_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll_ptr.o(.text) refers to _printf_hex_ll_ptr.o(.constdata) for .constdata
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll_ptr.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_hex_int_ll_ptr.o(.constdata) for .constdata
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) refers (Weak) to _printf_char.o(.text) for _printf_char
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) refers (Weak) to _printf_charcount.o(.text) for _printf_charcount
    _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_int_hex
    _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_hex_ptr
    _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) refers (Weak) to _printf_oct_int_ll.o(.text) for _printf_int_oct
    _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) refers (Weak) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) refers (Weak) to _printf_wchar.o(.text) for _printf_wchar
    _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) refers (Weak) to _printf_wchar.o(.text) for _printf_wstring
    _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) refers (Weak) to _printf_oct_int_ll.o(.text) for _printf_ll_oct
    _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_ll_hex
    printf1.o(x$fpl$printf1) refers to _printf_fp_dec.o(.text) for _printf_fp_dec_real
    printf2.o(x$fpl$printf2) refers to _printf_fp_hex.o(.text) for _printf_fp_hex_real
    printf2b.o(x$fpl$printf2) refers to _printf_fp_hex.o(.text) for _printf_fp_hex_real
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec.o(.text) refers to bigflt0.o(.text) for _btod_etento
    _printf_fp_dec.o(.text) refers to btod.o(.text) for _btod_d2e
    _printf_fp_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_fp_dec.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec.o(.text) refers to rtudiv10.o(.text) for __rt_udiv10
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec_accurate.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec_accurate.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec_accurate.o(.text) refers to btod_accurate.o(.text) for _btod_main
    _printf_fp_dec_accurate.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec_accurate.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec_accurate.o(.text) refers to rtudiv10.o(.text) for __rt_udiv10
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_hex.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_hex.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_hex.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_hex.o(.text) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_hex.o(.text) refers to _printf_fp_hex.o(.constdata) for .constdata
    _printf_fp_hex.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    _printf_wchar.o(.text) refers (Weak) to _printf_wctomb.o(.text) for _printf_wctomb
    _c16rtomb.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32g071xx.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    rt_ctype_table.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_locale_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    bigflt0.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    bigflt0.o(.text) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    bigflt0.o(.text) refers to btod.o(.text) for _btod_emul
    bigflt0.o(.text) refers to bigflt0.o(.constdata) for .constdata
    bigflt0.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(.text) refers to btod.o(i.__ARM_common_ll_muluu) for __ARM_common_ll_muluu
    btod_accurate.o(.text) refers to btod_accurate_common.o(.text) for _btod_common
    lc_numeric_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000018) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000018) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers to strcmpv6m.o(.text) for strcmp
    lc_numeric_c.o(locale$$code) refers to lc_numeric_c.o(locale$$data) for __lcnum_c_name
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    ieee_status.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    btod_accurate_common.o(.text) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    btod_accurate_common.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmpv6m.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000011) refers (Weak) to rt_locale_twolibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers (Weak) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing blinky.o(.text), (0 bytes).
    Removing blinky.o(.ARM.exidx.text.app_initialize), (8 bytes).
    Removing blinky.o(.ARM.exidx.text.app_main), (8 bytes).
    Removing blinky.o(.ARM.exidx.text.thrLED), (8 bytes).
    Removing blinky.o(.ARM.exidx.text.thrButton), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.SystemClock_Config), (112 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.text.Error_Handler), (4 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing stm32g0xx_it.o(.text), (0 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32g071b_discovery.o(.text), (0 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_GetVersion), (8 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_GetVersion), (8 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_LED_Init), (8 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_LED_DeInit), (32 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_LED_DeInit), (8 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_LED_On), (8 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_LED_Off), (8 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_LED_Toggle), (32 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_LED_Toggle), (8 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_JOY_Init), (8 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_JOY_DeInit), (32 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_JOY_DeInit), (8 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_JOY_GetState), (8 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_MOSFET_Init), (136 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_MOSFET_Init), (8 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_MOSFET_DeInit), (32 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_MOSFET_DeInit), (8 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_MOSFET_On), (32 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_MOSFET_On), (8 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_MOSFET_Off), (32 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_MOSFET_Off), (8 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_DOOR_Init), (100 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_DOOR_Init), (8 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_DOOR_DeInit), (20 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_DOOR_DeInit), (8 bytes).
    Removing stm32g071b_discovery.o(.text.BSP_DOOR_GetState), (24 bytes).
    Removing stm32g071b_discovery.o(.ARM.exidx.text.BSP_DOOR_GetState), (8 bytes).
    Removing stm32g071b_discovery.o(.data.ALERT_PORT), (12 bytes).
    Removing stm32g071b_discovery.o(.rodata.ALERT_PIN), (6 bytes).
    Removing stm32g071b_discovery.o(.rodata.ALERT_IRQn), (5 bytes).
    Removing stm32g071b_discovery.o(.data.MOSFET_PORT), (12 bytes).
    Removing stm32g071b_discovery.o(.rodata.MOSFET_PIN), (6 bytes).
    Removing irq_armv6m.o(.rodata), (1 bytes).
    Removing irq_armv6m.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (52 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (60 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (52 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (112 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (108 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (60 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (68 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (220 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (52 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (160 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (182 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (266 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (248 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (120 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (44 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickFreq), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetId), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSetPriority), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPriorityUpdated), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadYield), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminate), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntil), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntilStarted), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerError), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerNew), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerCreated), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStart), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStarted), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDelete), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDestroyed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreError), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNew), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreCreated), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquire), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquired), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreRelease), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreReleased), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDelete), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDestroyed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueNew), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCount), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueReset), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueResetDone), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.text.osRtxKernelPreInit), (2 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (120 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (72 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (20 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (100 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (156 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_lib.o(.text.__user_perthread_libspace), (100 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (132 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (160 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (76 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (612 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (76 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (148 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (190 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (176 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (68 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (68 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (68 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (68 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (76 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (376 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (136 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (40 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (40 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (40 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (46 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreNew), (68 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (40 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreAcquire), (128 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreRelease), (136 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (68 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (40 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (52 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreNew), (212 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphorePostProcess), (66 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (40 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreAcquire), (144 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreRelease), (138 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (120 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (174 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (124 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (332 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (156 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (116 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (284 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (388 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (52 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (52 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (208 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (192 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (92 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (124 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (40 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing vio_stm32g071b-disco.o(.text), (0 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioInit), (8 bytes).
    Removing vio_stm32g071b-disco.o(.text.vioPrint), (56 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioPrint), (8 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioSetSignal), (8 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioGetSignal), (8 bytes).
    Removing vio_stm32g071b-disco.o(.text.vioSetValue), (16 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioSetValue), (8 bytes).
    Removing vio_stm32g071b-disco.o(.text.vioGetValue), (20 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioGetValue), (8 bytes).
    Removing vio_stm32g071b-disco.o(.text.vioSetXYZ), (28 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioSetXYZ), (8 bytes).
    Removing vio_stm32g071b-disco.o(.text.vioGetXYZ), (40 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioGetXYZ), (8 bytes).
    Removing vio_stm32g071b-disco.o(.text.vioSetIPv4), (16 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioSetIPv4), (8 bytes).
    Removing vio_stm32g071b-disco.o(.text.vioGetIPv4), (20 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioGetIPv4), (8 bytes).
    Removing vio_stm32g071b-disco.o(.text.vioSetIPv6), (76 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioSetIPv6), (8 bytes).
    Removing vio_stm32g071b-disco.o(.text.vioGetIPv6), (36 bytes).
    Removing vio_stm32g071b-disco.o(.ARM.exidx.text.vioGetIPv6), (8 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerGetFreq), (44 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordItem), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStart), (136 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (136 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (132 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordData), (496 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing stm32g0xx_hal.o(.text), (0 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DeInit), (36 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_IncTick), (24 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetTick), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SetTickFreq), (40 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SuspendTick), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_ResumeTick), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetREVID), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetDEVID), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_VREFBUF_TrimmingConfig), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_TrimmingConfig), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableVREFBUF), (48 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableVREFBUF), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableVREFBUF), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableVREFBUF), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableRemap), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableRemap), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableRemap), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableRemap), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_StrobeDBattpinsConfig), (8 bytes).
    Removing stm32g0xx_hal.o(.bss.uwTick), (4 bytes).
    Removing stm32g0xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (32 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (28 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (52 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (24 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (28 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (24 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (28 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_MPU_Enable), (24 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_MPU_Disable), (16 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (84 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text), (0 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Init), (248 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_DeInit), (192 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Start), (144 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT), (204 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort), (116 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT), (120 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (292 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_IRQHandler), (228 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (70 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (88 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_GetState), (6 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_GetError), (4 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxSync), (84 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxSync), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxRequestGenerator), (76 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxRequestGenerator), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_EnableMuxRequestGenerator), (32 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_EnableMuxRequestGenerator), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_DisableMuxRequestGenerator), (32 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_DisableMuxRequestGenerator), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_MUX_IRQHandler), (96 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MUX_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text), (0 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine), (164 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine), (156 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine), (116 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback), (30 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetHandle), (14 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_IRQHandler), (68 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetPending), (40 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearPending), (36 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI), (28 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (280 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (16 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (40 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (40 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Rising_Callback), (2 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Rising_Callback), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Falling_Callback), (2 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Falling_Callback), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DeInit), (24 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (20 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (20 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (28 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (76 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (60 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging), (28 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBatteryCharging), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePORMonitorSampling), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePORMonitorSampling), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePORMonitorSampling), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePORMonitorSampling), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigPVD), (128 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ConfigPVD), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePVD), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePVD), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePVD), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePVD), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableInternalWakeUpLine), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableInternalWakeUpLine), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableInternalWakeUpLine), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableInternalWakeUpLine), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullUp), (112 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullUp), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullUp), (96 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullUp), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullDown), (132 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullDown), (64 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePullUpPullDownConfig), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePullUpPullDownConfig), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePullUpPullDownConfig), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePullUpPullDownConfig), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableSRAMRetention), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableSRAMRetention), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableSRAMRetention), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableSRAMRetention), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode), (72 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSHUTDOWNMode), (36 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSHUTDOWNMode), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_IRQHandler), (40 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVD_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_Rising_Callback), (2 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVD_Rising_Callback), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_Falling_Callback), (2 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVD_Falling_Callback), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit), (168 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq), (136 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (88 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq), (12 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (40 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (168 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (52 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (20 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableLSECSS), (16 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableLSECSS), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_DisableLSECSS), (16 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableLSECSS), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (44 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_LSECSSCallback), (2 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_LSECSSCallback), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetResetSource), (28 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetResetSource), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (552 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (116 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (932 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO), (152 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO), (92 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO), (8 bytes).
    Removing stm32g0xx_hal_uart.o(.text), (0 bytes).
    Removing stm32g0xx_hal_uart_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_msp.o(.text), (0 bytes).
    Removing stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing system_stm32g0xx.o(.text), (0 bytes).
    Removing system_stm32g0xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32g0xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32g0xx.o(.rodata.APBPrescTable), (32 bytes).

1025 unused section(s) (total 28898 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/bigflt.c                         0x00000000   Number         0  bigflt0.o ABSOLUTE
    ../clib/btod.c                           0x00000000   Number         0  btod.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate_common.o ABSOLUTE
    ../clib/division.c                       0x00000000   Number         0  lludiv10.o ABSOLUTE
    ../clib/division.c                       0x00000000   Number         0  rtudiv10.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/locale.c                         0x00000000   Number         0  _c16rtomb.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_numeric_c.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv6m.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  vsnprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_truncate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_charcount.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _snputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_wctomb.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_longlong_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec_accurate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_hex.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_wchar.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_infnan.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_c.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_n.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_x.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_p.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_o.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_i.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_u.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_f.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_e.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_g.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_a.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lli.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lld.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llu.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_ll.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_l.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lc.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_ls.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llo.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llx.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/cfplib/ieee_status.c            0x00000000   Number         0  ieee_status.o ABSOLUTE
    ../fplib/printf1.s                       0x00000000   Number         0  printf1.o ABSOLUTE
    ../fplib/printf2.s                       0x00000000   Number         0  printf2.o ABSOLUTE
    ../fplib/printf2a.s                      0x00000000   Number         0  printf2a.o ABSOLUTE
    ../fplib/printf2b.s                      0x00000000   Number         0  printf2b.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    Blinky.c                                 0x00000000   Number         0  blinky.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    RTE/Device/STM32G071RBTx/startup_stm32g071xx.s 0x00000000   Number         0  startup_stm32g071xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32g071b_discovery.c                   0x00000000   Number         0  stm32g071b_discovery.o ABSOLUTE
    stm32g0xx_hal.c                          0x00000000   Number         0  stm32g0xx_hal.o ABSOLUTE
    stm32g0xx_hal_cortex.c                   0x00000000   Number         0  stm32g0xx_hal_cortex.o ABSOLUTE
    stm32g0xx_hal_dma.c                      0x00000000   Number         0  stm32g0xx_hal_dma.o ABSOLUTE
    stm32g0xx_hal_dma_ex.c                   0x00000000   Number         0  stm32g0xx_hal_dma_ex.o ABSOLUTE
    stm32g0xx_hal_exti.c                     0x00000000   Number         0  stm32g0xx_hal_exti.o ABSOLUTE
    stm32g0xx_hal_gpio.c                     0x00000000   Number         0  stm32g0xx_hal_gpio.o ABSOLUTE
    stm32g0xx_hal_msp.c                      0x00000000   Number         0  stm32g0xx_hal_msp.o ABSOLUTE
    stm32g0xx_hal_pwr.c                      0x00000000   Number         0  stm32g0xx_hal_pwr.o ABSOLUTE
    stm32g0xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32g0xx_hal_pwr_ex.o ABSOLUTE
    stm32g0xx_hal_rcc.c                      0x00000000   Number         0  stm32g0xx_hal_rcc.o ABSOLUTE
    stm32g0xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32g0xx_hal_rcc_ex.o ABSOLUTE
    stm32g0xx_hal_uart.c                     0x00000000   Number         0  stm32g0xx_hal_uart.o ABSOLUTE
    stm32g0xx_hal_uart_ex.c                  0x00000000   Number         0  stm32g0xx_hal_uart_ex.o ABSOLUTE
    stm32g0xx_it.c                           0x00000000   Number         0  stm32g0xx_it.o ABSOLUTE
    system_stm32g0xx.c                       0x00000000   Number         0  system_stm32g0xx.o ABSOLUTE
    vio_STM32G071B-DISCO.c                   0x00000000   Number         0  vio_stm32g071b-disco.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv6m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv6m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv6m.o ABSOLUTE
    RESET                                    0x08000000   Section      188  startup_stm32g071xx.o(RESET)
    !!!main                                  0x080000bc   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000c4   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000100   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x0800011c   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000138   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800013a   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x0800013c   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800013e   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000140   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000140   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000140   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x08000146   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0800014e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000152   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000152   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800015a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800015c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800015c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000160   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000168   Section       56  rt_memcpy.o(.emb_text)
    [Anonymous Symbol]                       0x080001a0   Section        0  irq_armv6m.o(.text)
    SVC_Number                               0x080001aa   Number         0  irq_armv6m.o(.text)
    SVC_Context                              0x080001c0   Number         0  irq_armv6m.o(.text)
    SVC_ContextSave                          0x080001d0   Number         0  irq_armv6m.o(.text)
    SVC_ContextSaveRegs                      0x080001f4   Number         0  irq_armv6m.o(.text)
    SVC_ContextRestore                       0x08000202   Number         0  irq_armv6m.o(.text)
    SVC_MSP                                  0x0800021e   Number         0  irq_armv6m.o(.text)
    SVC_Exit                                 0x08000224   Number         0  irq_armv6m.o(.text)
    SVC_User                                 0x08000226   Number         0  irq_armv6m.o(.text)
    .text                                    0x08000268   Section       56  startup_stm32g071xx.o(.text)
    .text                                    0x080002a0   Section        0  rt_memcpy.o(.text)
    .text                                    0x08000322   Section        0  aeabi_memset4.o(.text)
    .text                                    0x08000334   Section        0  rt_memclr.o(.text)
    .text                                    0x08000374   Section        0  heapauxi.o(.text)
    .text                                    0x0800037a   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x080003b8   Section        0  exit.o(.text)
    .text                                    0x080003c8   Section        8  libspace.o(.text)
    .text                                    0x080003d0   Section        0  sys_exit.o(.text)
    .text                                    0x080003dc   Section        2  use_no_semi.o(.text)
    .text                                    0x080003de   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080003e0   Section        0  stm32g071b_discovery.o(.text.BSP_JOY_GetState)
    [Anonymous Symbol]                       0x08000404   Section        0  stm32g071b_discovery.o(.text.BSP_JOY_Init)
    __arm_cp.6_0                             0x08000490   Number         4  stm32g071b_discovery.o(.text.BSP_JOY_Init)
    __arm_cp.6_1                             0x08000494   Number         4  stm32g071b_discovery.o(.text.BSP_JOY_Init)
    __arm_cp.6_3                             0x08000498   Number         4  stm32g071b_discovery.o(.text.BSP_JOY_Init)
    [Anonymous Symbol]                       0x0800049c   Section        0  stm32g071b_discovery.o(.text.BSP_LED_Init)
    __arm_cp.1_0                             0x0800053c   Number         4  stm32g071b_discovery.o(.text.BSP_LED_Init)
    [Anonymous Symbol]                       0x08000540   Section        0  stm32g071b_discovery.o(.text.BSP_LED_Off)
    [Anonymous Symbol]                       0x08000558   Section        0  stm32g071b_discovery.o(.text.BSP_LED_On)
    __arm_cp.3_0                             0x08000570   Number         4  stm32g071b_discovery.o(.text.BSP_LED_On)
    __arm_cp.3_1                             0x08000574   Number         4  stm32g071b_discovery.o(.text.BSP_LED_On)
    [Anonymous Symbol]                       0x08000578   Section        0  eventrecorder.o(.text.EventRecord2)
    [Anonymous Symbol]                       0x0800061c   Section        0  eventrecorder.o(.text.EventRecord4)
    __arm_cp.12_2                            0x08000700   Number         4  eventrecorder.o(.text.EventRecord4)
    __arm_cp.12_3                            0x08000704   Number         4  eventrecorder.o(.text.EventRecord4)
    EventRecordItem                          0x08000709   Thumb Code   276  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x08000708   Section        0  eventrecorder.o(.text.EventRecordItem)
    __arm_cp.5_0                             0x0800081c   Number         4  eventrecorder.o(.text.EventRecordItem)
    __arm_cp.5_1                             0x08000820   Number         4  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x08000824   Section        0  eventrecorder.o(.text.EventRecorderDisable)
    [Anonymous Symbol]                       0x08000878   Section        0  eventrecorder.o(.text.EventRecorderEnable)
    __arm_cp.4_0                             0x080008cc   Number         4  eventrecorder.o(.text.EventRecorderEnable)
    [Anonymous Symbol]                       0x080008d0   Section        0  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_0                             0x08000ae4   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_1                             0x08000ae8   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_2                             0x08000aec   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_3                             0x08000af0   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_4                             0x08000af4   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_5                             0x08000af8   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_6                             0x08000afc   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_7                             0x08000b00   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_8                             0x08000b04   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    __arm_cp.3_9                             0x08000b08   Number         4  eventrecorder.o(.text.EventRecorderInitialize)
    [Anonymous Symbol]                       0x08000b0c   Section        0  eventrecorder.o(.text.EventRecorderTimerGetCount)
    [Anonymous Symbol]                       0x08000b34   Section        0  eventrecorder.o(.text.EventRecorderTimerSetup)
    __arm_cp.0_0                             0x08000b40   Number         4  eventrecorder.o(.text.EventRecorderTimerSetup)
    [Anonymous Symbol]                       0x08000b44   Section        0  rtx_evr.o(.text.EvrRtxDelay)
    __arm_cp.68_0                            0x08000b54   Number         4  rtx_evr.o(.text.EvrRtxDelay)
    [Anonymous Symbol]                       0x08000b58   Section        0  rtx_evr.o(.text.EvrRtxDelayCompleted)
    __arm_cp.72_0                            0x08000b68   Number         4  rtx_evr.o(.text.EvrRtxDelayCompleted)
    [Anonymous Symbol]                       0x08000b6c   Section        0  rtx_evr.o(.text.EvrRtxDelayError)
    [Anonymous Symbol]                       0x08000b7c   Section        0  rtx_evr.o(.text.EvrRtxDelayStarted)
    __arm_cp.70_0                            0x08000b8c   Number         4  rtx_evr.o(.text.EvrRtxDelayStarted)
    [Anonymous Symbol]                       0x08000b90   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    __arm_cp.96_0                            0x08000ba0   Number         4  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08000ba4   Section        0  rtx_evr.o(.text.EvrRtxKernelError)
    [Anonymous Symbol]                       0x08000bb4   Section        0  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    __arm_cp.25_0                            0x08000bc4   Number         4  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08000bc8   Section        0  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    __arm_cp.23_0                            0x08000bd8   Number         4  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x08000bdc   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialize)
    __arm_cp.7_0                             0x08000bec   Number         4  rtx_evr.o(.text.EvrRtxKernelInitialize)
    [Anonymous Symbol]                       0x08000bf0   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialized)
    __arm_cp.8_0                             0x08000c00   Number         4  rtx_evr.o(.text.EvrRtxKernelInitialized)
    [Anonymous Symbol]                       0x08000c04   Section        0  rtx_evr.o(.text.EvrRtxKernelStart)
    __arm_cp.11_0                            0x08000c14   Number         4  rtx_evr.o(.text.EvrRtxKernelStart)
    [Anonymous Symbol]                       0x08000c18   Section        0  rtx_evr.o(.text.EvrRtxKernelStarted)
    __arm_cp.12_0                            0x08000c28   Number         4  rtx_evr.o(.text.EvrRtxKernelStarted)
    [Anonymous Symbol]                       0x08000c2c   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    __arm_cp.1_0                             0x08000c44   Number         4  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08000c48   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    __arm_cp.4_0                             0x08000c58   Number         4  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x08000c5c   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    __arm_cp.5_0                             0x08000c74   Number         4  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x08000c78   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    __arm_cp.3_0                             0x08000c90   Number         4  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x08000c94   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    __arm_cp.2_0                             0x08000cac   Number         4  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x08000cb0   Section        0  rtx_evr.o(.text.EvrRtxMemoryInit)
    [Anonymous Symbol]                       0x08000ccc   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    __arm_cp.135_0                           0x08000cdc   Number         4  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x08000ce0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    __arm_cp.149_0                           0x08000cf0   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    [Anonymous Symbol]                       0x08000cf4   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueError)
    [Anonymous Symbol]                       0x08000d04   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    __arm_cp.157_0                           0x08000d1c   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08000d20   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    __arm_cp.158_0                           0x08000d38   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    [Anonymous Symbol]                       0x08000d3c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    __arm_cp.159_0                           0x08000d4c   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x08000d50   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    __arm_cp.154_0                           0x08000d60   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    [Anonymous Symbol]                       0x08000d64   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    __arm_cp.155_0                           0x08000d74   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    [Anonymous Symbol]                       0x08000d78   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    __arm_cp.156_0                           0x08000d88   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    [Anonymous Symbol]                       0x08000d8c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    __arm_cp.161_0                           0x08000d9c   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    [Anonymous Symbol]                       0x08000da0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    __arm_cp.151_0                           0x08000db8   Number         4  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08000dbc   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    __arm_cp.152_0                           0x08000dd4   Number         4  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    [Anonymous Symbol]                       0x08000dd8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    __arm_cp.153_0                           0x08000de8   Number         4  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x08000dec   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    __arm_cp.160_0                           0x08000dfc   Number         4  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    [Anonymous Symbol]                       0x08000e00   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquire)
    __arm_cp.105_0                           0x08000e10   Number         4  rtx_evr.o(.text.EvrRtxMutexAcquire)
    [Anonymous Symbol]                       0x08000e14   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    __arm_cp.106_0                           0x08000e24   Number         4  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    [Anonymous Symbol]                       0x08000e28   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    __arm_cp.107_0                           0x08000e38   Number         4  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x08000e3c   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquired)
    __arm_cp.108_0                           0x08000e4c   Number         4  rtx_evr.o(.text.EvrRtxMutexAcquired)
    [Anonymous Symbol]                       0x08000e50   Section        0  rtx_evr.o(.text.EvrRtxMutexCreated)
    __arm_cp.103_0                           0x08000e60   Number         4  rtx_evr.o(.text.EvrRtxMutexCreated)
    [Anonymous Symbol]                       0x08000e64   Section        0  rtx_evr.o(.text.EvrRtxMutexDelete)
    __arm_cp.113_0                           0x08000e74   Number         4  rtx_evr.o(.text.EvrRtxMutexDelete)
    [Anonymous Symbol]                       0x08000e78   Section        0  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    __arm_cp.114_0                           0x08000e88   Number         4  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    [Anonymous Symbol]                       0x08000e8c   Section        0  rtx_evr.o(.text.EvrRtxMutexError)
    [Anonymous Symbol]                       0x08000e9c   Section        0  rtx_evr.o(.text.EvrRtxMutexNew)
    __arm_cp.102_0                           0x08000eac   Number         4  rtx_evr.o(.text.EvrRtxMutexNew)
    [Anonymous Symbol]                       0x08000eb0   Section        0  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    __arm_cp.109_0                           0x08000ec0   Number         4  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    [Anonymous Symbol]                       0x08000ec4   Section        0  rtx_evr.o(.text.EvrRtxMutexRelease)
    __arm_cp.110_0                           0x08000ed4   Number         4  rtx_evr.o(.text.EvrRtxMutexRelease)
    [Anonymous Symbol]                       0x08000ed8   Section        0  rtx_evr.o(.text.EvrRtxMutexReleased)
    __arm_cp.111_0                           0x08000ee8   Number         4  rtx_evr.o(.text.EvrRtxMutexReleased)
    [Anonymous Symbol]                       0x08000eec   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    __arm_cp.121_0                           0x08000efc   Number         4  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x08000f00   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    __arm_cp.47_0                            0x08000f10   Number         4  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x08000f14   Section        0  rtx_evr.o(.text.EvrRtxThreadCreated)
    __arm_cp.28_0                            0x08000f30   Number         4  rtx_evr.o(.text.EvrRtxThreadCreated)
    [Anonymous Symbol]                       0x08000f34   Section        0  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    __arm_cp.53_0                            0x08000f44   Number         4  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    [Anonymous Symbol]                       0x08000f48   Section        0  rtx_evr.o(.text.EvrRtxThreadError)
    [Anonymous Symbol]                       0x08000f58   Section        0  rtx_evr.o(.text.EvrRtxThreadExit)
    __arm_cp.51_0                            0x08000f68   Number         4  rtx_evr.o(.text.EvrRtxThreadExit)
    [Anonymous Symbol]                       0x08000f6c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    [Anonymous Symbol]                       0x08000f7c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    __arm_cp.57_0                            0x08000f8c   Number         4  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x08000f90   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    __arm_cp.58_0                            0x08000fa0   Number         4  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    [Anonymous Symbol]                       0x08000fa4   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    __arm_cp.62_0                            0x08000fbc   Number         4  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x08000fc0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    __arm_cp.65_0                            0x08000fd8   Number         4  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    [Anonymous Symbol]                       0x08000fdc   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    __arm_cp.66_0                            0x08000fec   Number         4  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    [Anonymous Symbol]                       0x08000ff0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    __arm_cp.63_0                            0x08001008   Number         4  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    [Anonymous Symbol]                       0x0800100c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    __arm_cp.64_0                            0x0800101c   Number         4  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08001020   Section        0  rtx_evr.o(.text.EvrRtxThreadJoined)
    __arm_cp.46_0                            0x08001030   Number         4  rtx_evr.o(.text.EvrRtxThreadJoined)
    [Anonymous Symbol]                       0x08001034   Section        0  rtx_evr.o(.text.EvrRtxThreadNew)
    __arm_cp.27_0                            0x0800104c   Number         4  rtx_evr.o(.text.EvrRtxThreadNew)
    [Anonymous Symbol]                       0x08001050   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    __arm_cp.49_0                            0x08001060   Number         4  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x08001064   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    __arm_cp.50_0                            0x08001074   Number         4  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x08001078   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    __arm_cp.48_0                            0x08001088   Number         4  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x0800108c   Section        0  rtx_evr.o(.text.EvrRtxTimerCallback)
    __arm_cp.74_0                            0x0800109c   Number         4  rtx_evr.o(.text.EvrRtxTimerCallback)
    [Anonymous Symbol]                       0x080010a0   Section        0  stm32g0xx_hal.o(.text.HAL_Delay)
    [Anonymous Symbol]                       0x080010c0   Section        0  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_0                             0x08001244   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_1                             0x08001248   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_2                             0x0800124c   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_3                             0x08001250   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_4                             0x08001254   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x08001258   Section        0  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin)
    [Anonymous Symbol]                       0x08001262   Section        0  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    [Anonymous Symbol]                       0x08001274   Section        0  main.o(.text.HAL_GetTick)
    __arm_cp.0_1                             0x080012b8   Number         4  main.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x080012bc   Section        0  stm32g0xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x080012e4   Section        0  stm32g0xx_hal.o(.text.HAL_InitTick)
    __arm_cp.1_0                             0x08001324   Number         4  stm32g0xx_hal.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08001328   Section        0  stm32g0xx_hal_msp.o(.text.HAL_MspInit)
    __arm_cp.0_0                             0x08001374   Number         4  stm32g0xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08001378   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    __arm_cp.1_0                             0x0800138c   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08001390   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    __arm_cp.0_0                             0x080013c8   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    __arm_cp.0_1                             0x080013cc   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x080013d0   Section        0  stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling)
    __arm_cp.20_0                            0x08001418   Number         4  stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling)
    __arm_cp.20_2                            0x0800141c   Number         4  stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling)
    [Anonymous Symbol]                       0x08001420   Section        0  stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.2_0                             0x080015f8   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.2_1                             0x080015fc   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.2_2                             0x08001600   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.2_3                             0x08001604   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.2_4                             0x08001608   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.2_5                             0x0800160c   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.2_6                             0x08001610   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.2_7                             0x08001614   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x08001618   Section        0  stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_9                             0x080019ec   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_1                             0x08001a58   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_3                             0x08001a5c   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_4                             0x08001a60   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_5                             0x08001a64   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_6                             0x08001a68   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_7                             0x08001a6c   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08001a70   Section        0  stm32g0xx_hal.o(.text.HAL_SYSCFG_StrobeDBattpinsConfig)
    __arm_cp.32_0                            0x08001a80   Number         4  stm32g0xx_hal.o(.text.HAL_SYSCFG_StrobeDBattpinsConfig)
    [Anonymous Symbol]                       0x08001a84   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    __arm_cp.4_0                             0x08001aac   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    [Anonymous Symbol]                       0x08001ab0   Section        0  stm32g0xx_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08001ab2   Section        0  stm32g0xx_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08001ab4   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08001abc   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x08001adc   Section        0  os_systick.o(.text.OS_Tick_GetCount)
    [Anonymous Symbol]                       0x08001ae8   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08001af0   Section        0  os_systick.o(.text.OS_Tick_GetInterval)
    __arm_cp.6_0                             0x08001af8   Number         4  os_systick.o(.text.OS_Tick_GetInterval)
    [Anonymous Symbol]                       0x08001afc   Section        0  os_systick.o(.text.OS_Tick_GetOverflow)
    __arm_cp.8_0                             0x08001b08   Number         4  os_systick.o(.text.OS_Tick_GetOverflow)
    [Anonymous Symbol]                       0x08001b0c   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x08001b48   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x08001b4c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x08001b50   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x08001b54   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x08001b58   Section        0  system_stm32g0xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_0                             0x08001bd4   Number         4  system_stm32g0xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_1                             0x08001bd8   Number         4  system_stm32g0xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_2                             0x08001bdc   Number         4  system_stm32g0xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_3                             0x08001be0   Number         4  system_stm32g0xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_4                             0x08001be4   Number         4  system_stm32g0xx.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x08001be8   Section        0  system_stm32g0xx.o(.text.SystemInit)
    __arm_cp.0_0                             0x08001bf4   Number         4  system_stm32g0xx.o(.text.SystemInit)
    __tagsym$$used.1                         0x08001bf8   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08001bf8   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08001c24   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08001c24   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x08001c2e   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08001c2e   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08001c50   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08001c50   Section        0  rtx_lib.o(.text._mutex_release)
    __arm_cp.5_0                             0x08001c78   Number         4  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08001c7c   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x08001c84   Section        0  blinky.o(.text.app_initialize)
    __arm_cp.0_0                             0x08001c94   Number         4  blinky.o(.text.app_initialize)
    app_main                                 0x08001c99   Thumb Code    36  blinky.o(.text.app_main)
    [Anonymous Symbol]                       0x08001c98   Section        0  blinky.o(.text.app_main)
    __arm_cp.1_0                             0x08001cbc   Number         4  blinky.o(.text.app_main)
    __arm_cp.1_1                             0x08001cc0   Number         4  blinky.o(.text.app_main)
    __arm_cp.1_2                             0x08001cc4   Number         4  blinky.o(.text.app_main)
    __arm_cp.1_3                             0x08001cc8   Number         4  blinky.o(.text.app_main)
    [Anonymous Symbol]                       0x08001ccc   Section        0  main.o(.text.main)
    __arm_cp.1_0                             0x08001d78   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x08001d7c   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x08001dac   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08001db0   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x08001dd8   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08001ddc   Section        0  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    __arm_cp.17_1                            0x08001e18   Number         4  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    [Anonymous Symbol]                       0x08001e1c   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_0                            0x08001e40   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_1                            0x08001e44   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x08001e48   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x08001e78   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08001e7c   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x08001ea8   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08001eac   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x08001f80   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08001f84   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x08002020   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08002024   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x08002058   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x0800205c   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x0800208c   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08002090   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x080020c0   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x080020c4   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x080020f4   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x080020f8   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x080020fa   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x080020fc   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08002110   Section        0  rtx_lib.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x08002222   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x080022b6   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x0800230a   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08002348   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x0800237a   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x080023b6   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x0800240d   Thumb Code   430  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x0800240c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080025bc   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x080025dc   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x080025e0   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x0800263c   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x0800268c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x0800270c   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x08002784   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08002788   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x080028cc   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.8_0                             0x080029ac   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x080029b1   Thumb Code    80  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x080029b0   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.47_0                            0x08002a00   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08002a04   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08002a18   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08002a42   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08002a5a   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08002ab5   Thumb Code   150  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08002ab4   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08002b4c   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x08002b80   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08002b84   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08002b8c   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.11_0                            0x08002ba4   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x08002ba8   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.12_0                            0x08002be8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.12_1                            0x08002bec   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08002bf0   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x08002c00   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08002c04   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08002cd4   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    __arm_cp.9_0                             0x08002d5c   Number         4  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08002d60   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08002de0   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x08002dfc   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x08002e00   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x08002e25   Thumb Code   196  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08002e24   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x08002ee8   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08002eec   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.28_0                            0x08002f00   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08002f04   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    __arm_cp.32_0                            0x08002f84   Number         4  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x08002f88   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    __arm_cp.35_0                            0x08002fc8   Number         4  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x08002fcc   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.14_0                            0x0800300c   Number         4  rtx_thread.o(.text.osThreadNew)
    svcRtxDelay                              0x08003011   Thumb Code    52  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08003010   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x08003045   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08003044   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.6_0                             0x0800304c   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetSysTimerCount             0x08003051   Thumb Code    40  rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount)
    [Anonymous Symbol]                       0x08003050   Section        0  rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount)
    svcRtxKernelGetTickCount                 0x08003079   Thumb Code    16  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x08003078   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    __arm_cp.14_0                            0x08003088   Number         4  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelInitialize                   0x0800308d   Thumb Code   328  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x0800308c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_0                            0x080031d4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x080031d9   Thumb Code   140  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x080031d8   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_1                            0x08003264   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_2                            0x08003268   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_3                            0x0800326c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x08003271   Thumb Code   432  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08003270   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.19_0                            0x08003420   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x08003425   Thumb Code   536  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08003424   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x0800363c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x08003640   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_2                             0x08003644   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_3                             0x08003648   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_5                             0x0800364c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08003651   Thumb Code   324  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08003650   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.18_0                            0x08003794   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08003799   Thumb Code   232  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08003798   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x08003880   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x08003885   Thumb Code   204  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08003884   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.13_0                            0x08003950   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08003955   Thumb Code   156  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08003954   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x080039f0   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x080039f5   Thumb Code   252  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x080039f4   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x08003af0   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08003af5   Thumb Code   160  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08003af4   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.49_0                            0x08003b94   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.49_1                            0x08003b98   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadFlagsSet                     0x08003b9d   Thumb Code   316  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x08003b9c   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    __arm_cp.53_0                            0x08003cd8   Number         4  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsWait                    0x08003cdd   Thumb Code   232  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x08003cdc   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    __arm_cp.56_0                            0x08003dc4   Number         4  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadNew                          0x08003dc9   Thumb Code   628  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08003dc8   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.13_0                            0x0800403c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.13_1                            0x08004040   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.13_2                            0x08004044   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.13_3                            0x08004048   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.13_4                            0x0800404c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.13_5                            0x08004050   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    thrButton                                0x08004055   Thumb Code    40  blinky.o(.text.thrButton)
    [Anonymous Symbol]                       0x08004054   Section        0  blinky.o(.text.thrButton)
    __arm_cp.3_0                             0x0800407c   Number         4  blinky.o(.text.thrButton)
    thrLED                                   0x08004081   Thumb Code   110  blinky.o(.text.thrLED)
    [Anonymous Symbol]                       0x08004080   Section        0  blinky.o(.text.thrLED)
    [Anonymous Symbol]                       0x080040f0   Section        0  vio_stm32g071b-disco.o(.text.vioGetSignal)
    [Anonymous Symbol]                       0x080041b8   Section        0  vio_stm32g071b-disco.o(.text.vioInit)
    __arm_cp.0_1                             0x08004218   Number         4  vio_stm32g071b-disco.o(.text.vioInit)
    __arm_cp.0_2                             0x0800421c   Number         4  vio_stm32g071b-disco.o(.text.vioInit)
    __arm_cp.0_3                             0x08004220   Number         4  vio_stm32g071b-disco.o(.text.vioInit)
    __arm_cp.0_4                             0x08004224   Number         4  vio_stm32g071b-disco.o(.text.vioInit)
    __arm_cp.0_5                             0x08004228   Number         4  vio_stm32g071b-disco.o(.text.vioInit)
    __arm_cp.0_6                             0x0800422c   Number         4  vio_stm32g071b-disco.o(.text.vioInit)
    [Anonymous Symbol]                       0x08004230   Section        0  vio_stm32g071b-disco.o(.text.vioSetSignal)
    __arm_cp.2_0                             0x080042b8   Number         4  vio_stm32g071b-disco.o(.text.vioSetSignal)
    .text_divfast                            0x080042bc   Section      502  aeabi_sdivfast.o(.text_divfast)
    __tagsym$$used.4                         0x080044b4   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x08004524   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.0                         0x0800459c   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    os_idle_thread_attr                      0x080045d0   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x080045d0   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x080045f4   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x080045f4   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x0800460c   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x0800460c   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08004630   Section        0  rtx_kernel.o(.rodata.str1.4)
    .bss                                     0x200000d8   Section       96  libspace.o(.bss)
    HAL_GetTick.ticks                        0x20000138   Data           4  main.o(.bss.HAL_GetTick.ticks)
    [Anonymous Symbol]                       0x20000138   Section        0  main.o(.bss.HAL_GetTick.ticks)
    os_isr_queue                             0x20000140   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000140   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000180   Data       24000  rtx_lib.o(.bss.os)
    PendST                                   0x20005f40   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20005f40   Section        0  os_systick.o(.bss.os)
    os_timer_mq_cb                           0x20005f44   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20005f44   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20005f78   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20005f78   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x20005fc8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20005fc8   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x2000600c   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20006050   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20006050   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20006250   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20006250   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20006450   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20006450   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    tid_thrButton                            0x20006454   Data           4  blinky.o(.bss.tid_thrButton)
    [Anonymous Symbol]                       0x20006454   Section        0  blinky.o(.bss.tid_thrButton)
    tid_thrLED                               0x20006458   Data           4  blinky.o(.bss.tid_thrLED)
    [Anonymous Symbol]                       0x20006458   Section        0  blinky.o(.bss.tid_thrLED)
    __tagsym$$used.5                         0x20006460   Number         0  vio_stm32g071b-disco.o(.bss.vioAddrIPv4)
    __tagsym$$used.6                         0x20006468   Number         0  vio_stm32g071b-disco.o(.bss.vioAddrIPv6)
    __tagsym$$used.2                         0x20006488   Number         0  vio_stm32g071b-disco.o(.bss.vioPrintMem)
    __tagsym$$used.0                         0x20006588   Number         0  vio_stm32g071b-disco.o(.bss.vioSignalIn)
    __tagsym$$used.1                         0x2000658c   Number         0  vio_stm32g071b-disco.o(.bss.vioSignalOut)
    __tagsym$$used.3                         0x20006590   Number         0  vio_stm32g071b-disco.o(.bss.vioValue)
    __tagsym$$used.4                         0x2000659c   Number         0  vio_stm32g071b-disco.o(.bss.vioValueXYZ)
    Heap_Mem                                 0x200065c0   Data         512  startup_stm32g071xx.o(HEAP)
    HEAP                                     0x200065c0   Section      512  startup_stm32g071xx.o(HEAP)
    Stack_Mem                                0x200067c0   Data        1024  startup_stm32g071xx.o(STACK)
    STACK                                    0x200067c0   Section     1024  startup_stm32g071xx.o(STACK)
    __initial_sp                             0x20006bc0   Data           0  startup_stm32g071xx.o(STACK)
    SysTimerState                            0x20008800   Data           1  eventrecorder.o(.bss.SysTimerState)
    [Anonymous Symbol]                       0x20008800   Section        0  eventrecorder.o(.bss.SysTimerState)
    TS_OverflowLock                          0x20008801   Data           1  eventrecorder.o(.bss.TS_OverflowLock)
    [Anonymous Symbol]                       0x20008801   Section        0  eventrecorder.o(.bss.TS_OverflowLock)
    EventBuffer                              0x20008840   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x20008840   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x20008c40   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x20008cc0   Data          36  eventrecorder.o(.bss.noinit)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEJ$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_wc                                - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000bc   Number         0  startup_stm32g071xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32g071xx.o(RESET)
    __Vectors_End                            0x080000bc   Data           0  startup_stm32g071xx.o(RESET)
    __main                                   0x080000bd   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000c5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000c5   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000c5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000d5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000101   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x0800011d   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000139   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x0800013d   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000141   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000141   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000141   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x08000147   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0800014f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000153   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000153   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800015b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800015d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800015d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000161   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x08000169   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x08000169   Thumb Code     0  rt_memcpy.o(.emb_text)
    SVC_Handler                              0x080001a1   Thumb Code   162  irq_armv6m.o(.text)
    PendSV_Handler                           0x08000243   Thumb Code    12  irq_armv6m.o(.text)
    SysTick_Handler                          0x0800024f   Thumb Code    12  irq_armv6m.o(.text)
    Reset_Handler                            0x08000269   Thumb Code     8  startup_stm32g071xx.o(.text)
    ADC1_COMP_IRQHandler                     0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    CEC_IRQHandler                           0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    DMA1_Ch4_7_DMAMUX1_OVR_IRQHandler        0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    DMA1_Channel2_3_IRQHandler               0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    EXTI0_1_IRQHandler                       0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    EXTI2_3_IRQHandler                       0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    EXTI4_15_IRQHandler                      0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    FLASH_IRQHandler                         0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    I2C1_IRQHandler                          0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    I2C2_IRQHandler                          0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    PVD_IRQHandler                           0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    RCC_IRQHandler                           0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    RTC_TAMP_IRQHandler                      0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    SPI1_IRQHandler                          0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    SPI2_IRQHandler                          0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    TIM14_IRQHandler                         0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    TIM15_IRQHandler                         0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    TIM16_IRQHandler                         0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    TIM17_IRQHandler                         0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    TIM1_CC_IRQHandler                       0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    TIM2_IRQHandler                          0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    TIM3_IRQHandler                          0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    TIM6_DAC_LPTIM1_IRQHandler               0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    TIM7_LPTIM2_IRQHandler                   0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    UCPD1_2_IRQHandler                       0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    USART1_IRQHandler                        0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    USART2_IRQHandler                        0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    USART3_4_LPUART1_IRQHandler              0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    WWDG_IRQHandler                          0x0800027b   Thumb Code     0  startup_stm32g071xx.o(.text)
    __user_initial_stackheap                 0x0800027d   Thumb Code     0  startup_stm32g071xx.o(.text)
    __aeabi_memcpy                           0x080002a1   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x080002a1   Thumb Code     0  rt_memcpy.o(.text)
    __aeabi_memset4                          0x08000323   Thumb Code    18  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x08000323   Thumb Code     0  aeabi_memset4.o(.text)
    _memset_w                                0x08000335   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x0800034f   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x0800036d   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x0800036d   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000371   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x08000371   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x08000371   Thumb Code     4  rt_memclr.o(.text)
    __use_two_region_memory                  0x08000375   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08000377   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000379   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x0800037b   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x080003b9   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x080003c9   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080003c9   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080003d1   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080003dd   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080003dd   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080003df   Thumb Code     0  indicate_semi.o(.text)
    BSP_JOY_GetState                         0x080003e1   Thumb Code    36  stm32g071b_discovery.o(.text.BSP_JOY_GetState)
    BSP_JOY_Init                             0x08000405   Thumb Code   140  stm32g071b_discovery.o(.text.BSP_JOY_Init)
    BSP_LED_Init                             0x0800049d   Thumb Code   160  stm32g071b_discovery.o(.text.BSP_LED_Init)
    BSP_LED_Off                              0x08000541   Thumb Code    24  stm32g071b_discovery.o(.text.BSP_LED_Off)
    BSP_LED_On                               0x08000559   Thumb Code    24  stm32g071b_discovery.o(.text.BSP_LED_On)
    EventRecord2                             0x08000579   Thumb Code   164  eventrecorder.o(.text.EventRecord2)
    EventRecord4                             0x0800061d   Thumb Code   228  eventrecorder.o(.text.EventRecord4)
    EventRecorderDisable                     0x08000825   Thumb Code    84  eventrecorder.o(.text.EventRecorderDisable)
    EventRecorderEnable                      0x08000879   Thumb Code    84  eventrecorder.o(.text.EventRecorderEnable)
    EventRecorderInitialize                  0x080008d1   Thumb Code   532  eventrecorder.o(.text.EventRecorderInitialize)
    EventRecorderTimerGetCount               0x08000b0d   Thumb Code    40  eventrecorder.o(.text.EventRecorderTimerGetCount)
    EventRecorderTimerSetup                  0x08000b35   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerSetup)
    EvrRtxDelay                              0x08000b45   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelay)
    EvrRtxDelayCompleted                     0x08000b59   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelayCompleted)
    EvrRtxDelayError                         0x08000b6d   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelayError)
    EvrRtxDelayStarted                       0x08000b7d   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelayStarted)
    EvrRtxEventFlagsWaitTimeout              0x08000b91   Thumb Code    16  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x08000ba5   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelError)
    EvrRtxKernelErrorNotify                  0x08000bb5   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    EvrRtxKernelGetTickCount                 0x08000bc9   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    EvrRtxKernelInitialize                   0x08000bdd   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelInitialize)
    EvrRtxKernelInitialized                  0x08000bf1   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelInitialized)
    EvrRtxKernelStart                        0x08000c05   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelStart)
    EvrRtxKernelStarted                      0x08000c19   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelStarted)
    EvrRtxMemoryAlloc                        0x08000c2d   Thumb Code    24  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x08000c49   Thumb Code    16  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x08000c5d   Thumb Code    24  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x08000c79   Thumb Code    24  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x08000c95   Thumb Code    24  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x08000cb1   Thumb Code    26  rtx_evr.o(.text.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x08000ccd   Thumb Code    16  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueCreated                0x08000ce1   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    EvrRtxMessageQueueError                  0x08000cf5   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGet                    0x08000d05   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    EvrRtxMessageQueueGetPending             0x08000d21   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    EvrRtxMessageQueueGetTimeout             0x08000d3d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x08000d51   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x08000d65   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNotInserted            0x08000d79   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueueNotRetrieved           0x08000d8d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    EvrRtxMessageQueuePut                    0x08000da1   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x08000dbd   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x08000dd9   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueRetrieved              0x08000ded   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquire                       0x08000e01   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquire)
    EvrRtxMutexAcquirePending                0x08000e15   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    EvrRtxMutexAcquireTimeout                0x08000e29   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x08000e3d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquired)
    EvrRtxMutexCreated                       0x08000e51   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexCreated)
    EvrRtxMutexDelete                        0x08000e65   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexDelete)
    EvrRtxMutexDestroyed                     0x08000e79   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    EvrRtxMutexError                         0x08000e8d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexError)
    EvrRtxMutexNew                           0x08000e9d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexNew)
    EvrRtxMutexNotAcquired                   0x08000eb1   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    EvrRtxMutexRelease                       0x08000ec5   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexRelease)
    EvrRtxMutexReleased                      0x08000ed9   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquireTimeout            0x08000eed   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxThreadBlocked                      0x08000f01   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadCreated                      0x08000f15   Thumb Code    28  rtx_evr.o(.text.EvrRtxThreadCreated)
    EvrRtxThreadDestroyed                    0x08000f35   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    EvrRtxThreadError                        0x08000f49   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadError)
    EvrRtxThreadExit                         0x08000f59   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadExit)
    EvrRtxThreadFlagsError                   0x08000f6d   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    EvrRtxThreadFlagsSet                     0x08000f7d   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    EvrRtxThreadFlagsSetDone                 0x08000f91   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    EvrRtxThreadFlagsWait                    0x08000fa5   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    EvrRtxThreadFlagsWaitCompleted           0x08000fc1   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    EvrRtxThreadFlagsWaitNotCompleted        0x08000fdd   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    EvrRtxThreadFlagsWaitPending             0x08000ff1   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    EvrRtxThreadFlagsWaitTimeout             0x0800100d   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadJoined                       0x08001021   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadJoined)
    EvrRtxThreadNew                          0x08001035   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadNew)
    EvrRtxThreadPreempted                    0x08001051   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadSwitched                     0x08001065   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadUnblocked                    0x08001079   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    EvrRtxTimerCallback                      0x0800108d   Thumb Code    16  rtx_evr.o(.text.EvrRtxTimerCallback)
    HAL_Delay                                0x080010a1   Thumb Code    32  stm32g0xx_hal.o(.text.HAL_Delay)
    HAL_GPIO_Init                            0x080010c1   Thumb Code   388  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GPIO_ReadPin                         0x08001259   Thumb Code    10  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin)
    HAL_GPIO_WritePin                        0x08001263   Thumb Code    16  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    HAL_GetTick                              0x08001275   Thumb Code    68  main.o(.text.HAL_GetTick)
    HAL_Init                                 0x080012bd   Thumb Code    40  stm32g0xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x080012e5   Thumb Code    64  stm32g0xx_hal.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08001329   Thumb Code    76  stm32g0xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_EnableIRQ                       0x08001379   Thumb Code    20  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x08001391   Thumb Code    56  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_PWREx_ControlVoltageScaling          0x080013d1   Thumb Code    72  stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling)
    HAL_RCC_ClockConfig                      0x08001421   Thumb Code   472  stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_OscConfig                        0x08001619   Thumb Code  1088  stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    HAL_SYSCFG_StrobeDBattpinsConfig         0x08001a71   Thumb Code    16  stm32g0xx_hal.o(.text.HAL_SYSCFG_StrobeDBattpinsConfig)
    HAL_SYSTICK_Config                       0x08001a85   Thumb Code    40  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    HardFault_Handler                        0x08001ab1   Thumb Code     2  stm32g0xx_it.o(.text.HardFault_Handler)
    NMI_Handler                              0x08001ab3   Thumb Code     2  stm32g0xx_it.o(.text.NMI_Handler)
    OS_Tick_AcknowledgeIRQ                   0x08001ab5   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x08001abd   Thumb Code    32  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetCount                         0x08001add   Thumb Code    12  os_systick.o(.text.OS_Tick_GetCount)
    OS_Tick_GetIRQn                          0x08001ae9   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_GetInterval                      0x08001af1   Thumb Code     8  os_systick.o(.text.OS_Tick_GetInterval)
    OS_Tick_GetOverflow                      0x08001afd   Thumb Code    12  os_systick.o(.text.OS_Tick_GetOverflow)
    OS_Tick_Setup                            0x08001b0d   Thumb Code    60  os_systick.o(.text.OS_Tick_Setup)
    SystemCoreClockUpdate                    0x08001b59   Thumb Code   124  system_stm32g0xx.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x08001be9   Thumb Code    12  system_stm32g0xx.o(.text.SystemInit)
    _mutex_acquire                           0x08001bf9   Thumb Code    44  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x08001c25   Thumb Code    10  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x08001c2f   Thumb Code    34  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x08001c51   Thumb Code    40  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08001c7d   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    app_initialize                           0x08001c85   Thumb Code    16  blinky.o(.text.app_initialize)
    main                                     0x08001ccd   Thumb Code   172  main.o(.text.main)
    osDelay                                  0x08001d7d   Thumb Code    48  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x08001db1   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetSysTimerCount                 0x08001ddd   Thumb Code    60  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    osKernelGetTickCount                     0x08001e1d   Thumb Code    36  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelInitialize                       0x08001e49   Thumb Code    48  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08001e7d   Thumb Code    44  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x08001ead   Thumb Code   212  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x08001f85   Thumb Code   156  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08002025   Thumb Code    52  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x0800205d   Thumb Code    48  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08002091   Thumb Code    48  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x080020c5   Thumb Code    48  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x080020f9   Thumb Code     2  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x080020fb   Thumb Code     2  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x080020fd   Thumb Code    20  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x08002111   Thumb Code   274  rtx_lib.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x08002223   Thumb Code   148  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x080022b7   Thumb Code    84  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x0800230b   Thumb Code    62  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08002349   Thumb Code    50  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x0800237b   Thumb Code    60  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x080023b7   Thumb Code    86  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x080025bd   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x080025e1   Thumb Code    92  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x0800263d   Thumb Code    80  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x0800268d   Thumb Code   128  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x0800270d   Thumb Code   120  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x08002789   Thumb Code   324  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x080028cd   Thumb Code   224  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08002a05   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08002a19   Thumb Code    42  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08002a43   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08002a5b   Thumb Code    90  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08002b4d   Thumb Code    52  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08002b85   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08002b8d   Thumb Code    24  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x08002ba9   Thumb Code    64  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08002bf1   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08002c05   Thumb Code   208  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08002cd5   Thumb Code   136  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08002d61   Thumb Code   128  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x08002de1   Thumb Code    28  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x08002e01   Thumb Code    36  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x08002eed   Thumb Code    20  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x08002f05   Thumb Code   128  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x08002f89   Thumb Code    64  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadNew                              0x08002fcd   Thumb Code    64  rtx_thread.o(.text.osThreadNew)
    vioGetSignal                             0x080040f1   Thumb Code   200  vio_stm32g071b-disco.o(.text.vioGetSignal)
    vioInit                                  0x080041b9   Thumb Code    96  vio_stm32g071b-disco.o(.text.vioInit)
    vioSetSignal                             0x08004231   Thumb Code   136  vio_stm32g071b-disco.o(.text.vioSetSignal)
    __aeabi_uidiv                            0x080042bd   Thumb Code    68  aeabi_sdivfast.o(.text_divfast)
    __aeabi_idiv                             0x08004301   Thumb Code   434  aeabi_sdivfast.o(.text_divfast)
    osRtxConfig                              0x080044b4   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x08004524   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x0800455c   Data          64  system_stm32g0xx.o(.rodata.AHBPrescTable)
    EventRecorderInfo                        0x0800459c   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    JOY_IRQn                                 0x080045b4   Data           5  stm32g071b_discovery.o(.rodata.JOY_IRQn)
    JOY_PIN                                  0x080045ba   Data          10  stm32g071b_discovery.o(.rodata.JOY_PIN)
    LED_PIN                                  0x080045c4   Data           8  stm32g071b_discovery.o(.rodata.LED_PIN)
    osRtxUserSVC                             0x080045cc   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x0800463c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800465c   Number         0  anon$$obj.o(Region$$Table)
    JOY_PORT                                 0x20000000   Data          20  stm32g071b_discovery.o(.data.JOY_PORT)
    LED_PORT                                 0x20000014   Data          16  stm32g071b_discovery.o(.data.LED_PORT)
    SystemCoreClock                          0x20000024   Data           4  system_stm32g0xx.o(.data.SystemCoreClock)
    osRtxInfo                                0x20000028   Data         164  rtx_kernel.o(.data.os)
    uwTickFreq                               0x200000cc   Data           1  stm32g0xx_hal.o(.data.uwTickFreq)
    uwTickPrio                               0x200000d0   Data           4  stm32g0xx_hal.o(.data.uwTickPrio)
    __libspace_start                         0x200000d8   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000138   Data           0  libspace.o(.bss)
    .bss.os.msgqueue.cb$$Base                0x20005f44   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20005f78   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x20005fc8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20006050   Number         0  rtx_lib.o(.bss.os.thread.cb)
    vioAddrIPv4                              0x20006460   Data           8  vio_stm32g071b-disco.o(.bss.vioAddrIPv4)
    vioAddrIPv6                              0x20006468   Data          32  vio_stm32g071b-disco.o(.bss.vioAddrIPv6)
    vioPrintMem                              0x20006488   Data         256  vio_stm32g071b-disco.o(.bss.vioPrintMem)
    vioSignalIn                              0x20006588   Data           4  vio_stm32g071b-disco.o(.bss.vioSignalIn)
    vioSignalOut                             0x2000658c   Data           4  vio_stm32g071b-disco.o(.bss.vioSignalOut)
    vioValue                                 0x20006590   Data          12  vio_stm32g071b-disco.o(.bss.vioValue)
    vioValueXYZ                              0x2000659c   Data          36  vio_stm32g071b-disco.o(.bss.vioValueXYZ)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000bd

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00004738, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000465c, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000bc   Data   RO         1468    RESET               startup_stm32g071xx.o
    0x080000bc   0x080000bc   0x00000008   Code   RO         1512  * !!!main             c_p.l(__main.o)
    0x080000c4   0x080000c4   0x0000003c   Code   RO         1845    !!!scatter          c_p.l(__scatter.o)
    0x08000100   0x08000100   0x0000001a   Code   RO         1847    !!handler_copy      c_p.l(__scatter_copy.o)
    0x0800011a   0x0800011a   0x00000002   PAD
    0x0800011c   0x0800011c   0x0000001c   Code   RO         1849    !!handler_zi        c_p.l(__scatter_zi.o)
    0x08000138   0x08000138   0x00000002   Code   RO         1692    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1718    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1720    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1722    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1725    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1727    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1729    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1732    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1734    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1736    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1738    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1740    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1742    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1744    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1746    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1748    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1750    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1752    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1756    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1758    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1760    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1762    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000002   Code   RO         1763    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x0800013c   0x0800013c   0x00000002   Code   RO         1800    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1828    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1830    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1833    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1836    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1838    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1841    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000002   Code   RO         1842    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x08000140   0x08000140   0x00000000   Code   RO         1514    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x08000140   0x08000140   0x00000000   Code   RO         1619    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x08000140   0x08000140   0x00000006   Code   RO         1631    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x08000146   0x08000146   0x00000008   Code   RO         1620    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x0800014e   0x0800014e   0x00000004   Code   RO         1622    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x08000152   0x08000152   0x00000000   Code   RO         1624    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x08000152   0x08000152   0x00000008   Code   RO         1625    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x0800015a   0x0800015a   0x00000002   Code   RO         1702    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x0800015c   0x0800015c   0x00000000   Code   RO         1769    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x0800015c   0x0800015c   0x00000004   Code   RO         1770    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x08000160   0x08000160   0x00000006   Code   RO         1771    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x08000166   0x08000166   0x00000002   PAD
    0x08000168   0x08000168   0x00000038   Code   RO         1494    .emb_text           c_p.l(rt_memcpy.o)
    0x080001a0   0x080001a0   0x000000c8   Code   RO           98    .text               irq_armv6m.o
    0x08000268   0x08000268   0x00000038   Code   RO         1469    .text               startup_stm32g071xx.o
    0x080002a0   0x080002a0   0x00000082   Code   RO         1495    .text               c_p.l(rt_memcpy.o)
    0x08000322   0x08000322   0x00000012   Code   RO         1498    .text               c_p.l(aeabi_memset4.o)
    0x08000334   0x08000334   0x00000040   Code   RO         1500    .text               c_p.l(rt_memclr.o)
    0x08000374   0x08000374   0x00000006   Code   RO         1510    .text               c_p.l(heapauxi.o)
    0x0800037a   0x0800037a   0x0000003e   Code   RO         1657    .text               c_p.l(sys_stackheap_outer.o)
    0x080003b8   0x080003b8   0x00000010   Code   RO         1683    .text               c_p.l(exit.o)
    0x080003c8   0x080003c8   0x00000008   Code   RO         1698    .text               c_p.l(libspace.o)
    0x080003d0   0x080003d0   0x0000000c   Code   RO         1764    .text               c_p.l(sys_exit.o)
    0x080003dc   0x080003dc   0x00000002   Code   RO         1789    .text               c_p.l(use_no_semi.o)
    0x080003de   0x080003de   0x00000000   Code   RO         1791    .text               c_p.l(indicate_semi.o)
    0x080003de   0x080003de   0x00000002   PAD
    0x080003e0   0x080003e0   0x00000024   Code   RO           65    .text.BSP_JOY_GetState  stm32g071b_discovery.o
    0x08000404   0x08000404   0x00000098   Code   RO           61    .text.BSP_JOY_Init  stm32g071b_discovery.o
    0x0800049c   0x0800049c   0x000000a4   Code   RO           51    .text.BSP_LED_Init  stm32g071b_discovery.o
    0x08000540   0x08000540   0x00000018   Code   RO           57    .text.BSP_LED_Off   stm32g071b_discovery.o
    0x08000558   0x08000558   0x00000020   Code   RO           55    .text.BSP_LED_On    stm32g071b_discovery.o
    0x08000578   0x08000578   0x000000a4   Code   RO         1072    .text.EventRecord2  eventrecorder.o
    0x0800061c   0x0800061c   0x000000ec   Code   RO         1074    .text.EventRecord4  eventrecorder.o
    0x08000708   0x08000708   0x0000011c   Code   RO         1060    .text.EventRecordItem  eventrecorder.o
    0x08000824   0x08000824   0x00000054   Code   RO         1064    .text.EventRecorderDisable  eventrecorder.o
    0x08000878   0x08000878   0x00000058   Code   RO         1058    .text.EventRecorderEnable  eventrecorder.o
    0x080008d0   0x080008d0   0x0000023c   Code   RO         1056    .text.EventRecorderInitialize  eventrecorder.o
    0x08000b0c   0x08000b0c   0x00000028   Code   RO         1054    .text.EventRecorderTimerGetCount  eventrecorder.o
    0x08000b34   0x08000b34   0x00000010   Code   RO         1050    .text.EventRecorderTimerSetup  eventrecorder.o
    0x08000b44   0x08000b44   0x00000014   Code   RO          296    .text.EvrRtxDelay   rtx_evr.o
    0x08000b58   0x08000b58   0x00000014   Code   RO          304    .text.EvrRtxDelayCompleted  rtx_evr.o
    0x08000b6c   0x08000b6c   0x00000010   Code   RO          294    .text.EvrRtxDelayError  rtx_evr.o
    0x08000b7c   0x08000b7c   0x00000014   Code   RO          300    .text.EvrRtxDelayStarted  rtx_evr.o
    0x08000b90   0x08000b90   0x00000014   Code   RO          352    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x08000ba4   0x08000ba4   0x00000010   Code   RO          172    .text.EvrRtxKernelError  rtx_evr.o
    0x08000bb4   0x08000bb4   0x00000014   Code   RO          210    .text.EvrRtxKernelErrorNotify  rtx_evr.o
    0x08000bc8   0x08000bc8   0x00000014   Code   RO          206    .text.EvrRtxKernelGetTickCount  rtx_evr.o
    0x08000bdc   0x08000bdc   0x00000014   Code   RO          174    .text.EvrRtxKernelInitialize  rtx_evr.o
    0x08000bf0   0x08000bf0   0x00000014   Code   RO          176    .text.EvrRtxKernelInitialized  rtx_evr.o
    0x08000c04   0x08000c04   0x00000014   Code   RO          182    .text.EvrRtxKernelStart  rtx_evr.o
    0x08000c18   0x08000c18   0x00000014   Code   RO          184    .text.EvrRtxKernelStarted  rtx_evr.o
    0x08000c2c   0x08000c2c   0x0000001c   Code   RO          162    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x08000c48   0x08000c48   0x00000014   Code   RO          168    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x08000c5c   0x08000c5c   0x0000001c   Code   RO          170    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x08000c78   0x08000c78   0x0000001c   Code   RO          166    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x08000c94   0x08000c94   0x0000001c   Code   RO          164    .text.EvrRtxMemoryFree  rtx_evr.o
    0x08000cb0   0x08000cb0   0x0000001a   Code   RO          160    .text.EvrRtxMemoryInit  rtx_evr.o
    0x08000cca   0x08000cca   0x00000002   PAD
    0x08000ccc   0x08000ccc   0x00000014   Code   RO          430    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x08000ce0   0x08000ce0   0x00000014   Code   RO          458    .text.EvrRtxMessageQueueCreated  rtx_evr.o
    0x08000cf4   0x08000cf4   0x00000010   Code   RO          454    .text.EvrRtxMessageQueueError  rtx_evr.o
    0x08000d04   0x08000d04   0x0000001c   Code   RO          474    .text.EvrRtxMessageQueueGet  rtx_evr.o
    0x08000d20   0x08000d20   0x0000001c   Code   RO          476    .text.EvrRtxMessageQueueGetPending  rtx_evr.o
    0x08000d3c   0x08000d3c   0x00000014   Code   RO          478    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x08000d50   0x08000d50   0x00000014   Code   RO          468    .text.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x08000d64   0x08000d64   0x00000014   Code   RO          470    .text.EvrRtxMessageQueueInserted  rtx_evr.o
    0x08000d78   0x08000d78   0x00000014   Code   RO          472    .text.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x08000d8c   0x08000d8c   0x00000014   Code   RO          482    .text.EvrRtxMessageQueueNotRetrieved  rtx_evr.o
    0x08000da0   0x08000da0   0x0000001c   Code   RO          462    .text.EvrRtxMessageQueuePut  rtx_evr.o
    0x08000dbc   0x08000dbc   0x0000001c   Code   RO          464    .text.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x08000dd8   0x08000dd8   0x00000014   Code   RO          466    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x08000dec   0x08000dec   0x00000014   Code   RO          480    .text.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x08000e00   0x08000e00   0x00000014   Code   RO          370    .text.EvrRtxMutexAcquire  rtx_evr.o
    0x08000e14   0x08000e14   0x00000014   Code   RO          372    .text.EvrRtxMutexAcquirePending  rtx_evr.o
    0x08000e28   0x08000e28   0x00000014   Code   RO          374    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x08000e3c   0x08000e3c   0x00000014   Code   RO          376    .text.EvrRtxMutexAcquired  rtx_evr.o
    0x08000e50   0x08000e50   0x00000014   Code   RO          366    .text.EvrRtxMutexCreated  rtx_evr.o
    0x08000e64   0x08000e64   0x00000014   Code   RO          386    .text.EvrRtxMutexDelete  rtx_evr.o
    0x08000e78   0x08000e78   0x00000014   Code   RO          388    .text.EvrRtxMutexDestroyed  rtx_evr.o
    0x08000e8c   0x08000e8c   0x00000010   Code   RO          362    .text.EvrRtxMutexError  rtx_evr.o
    0x08000e9c   0x08000e9c   0x00000014   Code   RO          364    .text.EvrRtxMutexNew  rtx_evr.o
    0x08000eb0   0x08000eb0   0x00000014   Code   RO          378    .text.EvrRtxMutexNotAcquired  rtx_evr.o
    0x08000ec4   0x08000ec4   0x00000014   Code   RO          380    .text.EvrRtxMutexRelease  rtx_evr.o
    0x08000ed8   0x08000ed8   0x00000014   Code   RO          382    .text.EvrRtxMutexReleased  rtx_evr.o
    0x08000eec   0x08000eec   0x00000014   Code   RO          402    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x08000f00   0x08000f00   0x00000014   Code   RO          254    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x08000f14   0x08000f14   0x00000020   Code   RO          216    .text.EvrRtxThreadCreated  rtx_evr.o
    0x08000f34   0x08000f34   0x00000014   Code   RO          266    .text.EvrRtxThreadDestroyed  rtx_evr.o
    0x08000f48   0x08000f48   0x00000010   Code   RO          212    .text.EvrRtxThreadError  rtx_evr.o
    0x08000f58   0x08000f58   0x00000014   Code   RO          262    .text.EvrRtxThreadExit  rtx_evr.o
    0x08000f6c   0x08000f6c   0x00000010   Code   RO          272    .text.EvrRtxThreadFlagsError  rtx_evr.o
    0x08000f7c   0x08000f7c   0x00000014   Code   RO          274    .text.EvrRtxThreadFlagsSet  rtx_evr.o
    0x08000f90   0x08000f90   0x00000014   Code   RO          276    .text.EvrRtxThreadFlagsSetDone  rtx_evr.o
    0x08000fa4   0x08000fa4   0x0000001c   Code   RO          284    .text.EvrRtxThreadFlagsWait  rtx_evr.o
    0x08000fc0   0x08000fc0   0x0000001c   Code   RO          290    .text.EvrRtxThreadFlagsWaitCompleted  rtx_evr.o
    0x08000fdc   0x08000fdc   0x00000014   Code   RO          292    .text.EvrRtxThreadFlagsWaitNotCompleted  rtx_evr.o
    0x08000ff0   0x08000ff0   0x0000001c   Code   RO          286    .text.EvrRtxThreadFlagsWaitPending  rtx_evr.o
    0x0800100c   0x0800100c   0x00000014   Code   RO          288    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x08001020   0x08001020   0x00000014   Code   RO          252    .text.EvrRtxThreadJoined  rtx_evr.o
    0x08001034   0x08001034   0x0000001c   Code   RO          214    .text.EvrRtxThreadNew  rtx_evr.o
    0x08001050   0x08001050   0x00000014   Code   RO          258    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x08001064   0x08001064   0x00000014   Code   RO          260    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x08001078   0x08001078   0x00000014   Code   RO          256    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x0800108c   0x0800108c   0x00000014   Code   RO          308    .text.EvrRtxTimerCallback  rtx_evr.o
    0x080010a0   0x080010a0   0x00000020   Code   RO         1108    .text.HAL_Delay     stm32g0xx_hal.o
    0x080010c0   0x080010c0   0x00000198   Code   RO         1279    .text.HAL_GPIO_Init  stm32g0xx_hal_gpio.o
    0x08001258   0x08001258   0x0000000a   Code   RO         1283    .text.HAL_GPIO_ReadPin  stm32g0xx_hal_gpio.o
    0x08001262   0x08001262   0x00000010   Code   RO         1285    .text.HAL_GPIO_WritePin  stm32g0xx_hal_gpio.o
    0x08001272   0x08001272   0x00000002   PAD
    0x08001274   0x08001274   0x00000048   Code   RO           20    .text.HAL_GetTick   main.o
    0x080012bc   0x080012bc   0x00000028   Code   RO         1088    .text.HAL_Init      stm32g0xx_hal.o
    0x080012e4   0x080012e4   0x00000044   Code   RO         1090    .text.HAL_InitTick  stm32g0xx_hal.o
    0x08001328   0x08001328   0x00000050   Code   RO         1459    .text.HAL_MspInit   stm32g0xx_hal_msp.o
    0x08001378   0x08001378   0x00000018   Code   RO         1167    .text.HAL_NVIC_EnableIRQ  stm32g0xx_hal_cortex.o
    0x08001390   0x08001390   0x00000040   Code   RO         1165    .text.HAL_NVIC_SetPriority  stm32g0xx_hal_cortex.o
    0x080013d0   0x080013d0   0x00000050   Code   RO         1377    .text.HAL_PWREx_ControlVoltageScaling  stm32g0xx_hal_pwr_ex.o
    0x08001420   0x08001420   0x000001f8   Code   RO         1403    .text.HAL_RCC_ClockConfig  stm32g0xx_hal_rcc.o
    0x08001618   0x08001618   0x00000458   Code   RO         1401    .text.HAL_RCC_OscConfig  stm32g0xx_hal_rcc.o
    0x08001a70   0x08001a70   0x00000014   Code   RO         1152    .text.HAL_SYSCFG_StrobeDBattpinsConfig  stm32g0xx_hal.o
    0x08001a84   0x08001a84   0x0000002c   Code   RO         1173    .text.HAL_SYSTICK_Config  stm32g0xx_hal_cortex.o
    0x08001ab0   0x08001ab0   0x00000002   Code   RO           40    .text.HardFault_Handler  stm32g0xx_it.o
    0x08001ab2   0x08001ab2   0x00000002   Code   RO           38    .text.NMI_Handler   stm32g0xx_it.o
    0x08001ab4   0x08001ab4   0x00000008   Code   RO          979    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x08001abc   0x08001abc   0x00000020   Code   RO          975    .text.OS_Tick_Enable  os_systick.o
    0x08001adc   0x08001adc   0x0000000c   Code   RO          987    .text.OS_Tick_GetCount  os_systick.o
    0x08001ae8   0x08001ae8   0x00000006   Code   RO          981    .text.OS_Tick_GetIRQn  os_systick.o
    0x08001aee   0x08001aee   0x00000002   PAD
    0x08001af0   0x08001af0   0x0000000c   Code   RO          985    .text.OS_Tick_GetInterval  os_systick.o
    0x08001afc   0x08001afc   0x00000010   Code   RO          989    .text.OS_Tick_GetOverflow  os_systick.o
    0x08001b0c   0x08001b0c   0x0000004c   Code   RO          973    .text.OS_Tick_Setup  os_systick.o
    0x08001b58   0x08001b58   0x00000090   Code   RO         1478    .text.SystemCoreClockUpdate  system_stm32g0xx.o
    0x08001be8   0x08001be8   0x00000010   Code   RO         1476    .text.SystemInit    system_stm32g0xx.o
    0x08001bf8   0x08001bf8   0x0000002c   Code   RO          582    .text._mutex_acquire  rtx_lib.o
    0x08001c24   0x08001c24   0x0000000a   Code   RO          586    .text._mutex_free   rtx_lib.o
    0x08001c2e   0x08001c2e   0x00000022   Code   RO          580    .text._mutex_initialize  rtx_lib.o
    0x08001c50   0x08001c50   0x0000002c   Code   RO          584    .text._mutex_release  rtx_lib.o
    0x08001c7c   0x08001c7c   0x00000008   Code   RO          574    .text._platform_post_stackheap_init  rtx_lib.o
    0x08001c84   0x08001c84   0x00000014   Code   RO            2    .text.app_initialize  blinky.o
    0x08001c98   0x08001c98   0x00000034   Code   RO            4    .text.app_main      blinky.o
    0x08001ccc   0x08001ccc   0x000000b0   Code   RO           22    .text.main          main.o
    0x08001d7c   0x08001d7c   0x00000034   Code   RO          106    .text.osDelay       rtx_delay.o
    0x08001db0   0x08001db0   0x0000002c   Code   RO          518    .text.osKernelGetState  rtx_kernel.o
    0x08001ddc   0x08001ddc   0x00000040   Code   RO          542    .text.osKernelGetSysTimerCount  rtx_kernel.o
    0x08001e1c   0x08001e1c   0x0000002c   Code   RO          534    .text.osKernelGetTickCount  rtx_kernel.o
    0x08001e48   0x08001e48   0x00000034   Code   RO          512    .text.osKernelInitialize  rtx_kernel.o
    0x08001e7c   0x08001e7c   0x00000030   Code   RO          522    .text.osKernelStart  rtx_kernel.o
    0x08001eac   0x08001eac   0x000000d8   Code   RO          687    .text.osMessageQueueGet  rtx_msgqueue.o
    0x08001f84   0x08001f84   0x000000a0   Code   RO          685    .text.osMessageQueuePut  rtx_msgqueue.o
    0x08002024   0x08002024   0x00000038   Code   RO          737    .text.osMutexAcquire  rtx_mutex.o
    0x0800205c   0x0800205c   0x00000034   Code   RO          743    .text.osMutexDelete  rtx_mutex.o
    0x08002090   0x08002090   0x00000034   Code   RO          733    .text.osMutexNew    rtx_mutex.o
    0x080020c4   0x080020c4   0x00000034   Code   RO          739    .text.osMutexRelease  rtx_mutex.o
    0x080020f8   0x080020f8   0x00000002   Code   RO         1002    .text.osRtxErrorNotify  rtx_config.o
    0x080020fa   0x080020fa   0x00000002   Code   RO         1000    .text.osRtxIdleThread  rtx_config.o
    0x080020fc   0x080020fc   0x00000014   Code   RO          510    .text.osRtxKernelErrorNotify  rtx_kernel.o
    0x08002110   0x08002110   0x00000112   Code   RO          576    .text.osRtxKernelPreInit  rtx_lib.o
    0x08002222   0x08002222   0x00000094   Code   RO          613    .text.osRtxMemoryAlloc  rtx_memory.o
    0x080022b6   0x080022b6   0x00000054   Code   RO          615    .text.osRtxMemoryFree  rtx_memory.o
    0x0800230a   0x0800230a   0x0000003e   Code   RO          611    .text.osRtxMemoryInit  rtx_memory.o
    0x08002348   0x08002348   0x00000032   Code   RO          627    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x0800237a   0x0800237a   0x0000003c   Code   RO          629    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x080023b6   0x080023b6   0x00000056   Code   RO          625    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x0800240c   0x0800240c   0x000001ae   Code   RO          709    .text.osRtxMessageQueuePostProcess  rtx_msgqueue.o
    0x080025ba   0x080025ba   0x00000002   PAD
    0x080025bc   0x080025bc   0x00000024   Code   RO          677    .text.osRtxMessageQueueTimerSetup  rtx_msgqueue.o
    0x080025e0   0x080025e0   0x0000005c   Code   RO          729    .text.osRtxMutexOwnerRelease  rtx_mutex.o
    0x0800263c   0x0800263c   0x00000050   Code   RO          731    .text.osRtxMutexOwnerRestore  rtx_mutex.o
    0x0800268c   0x0800268c   0x00000080   Code   RO          801    .text.osRtxPendSV_Handler  rtx_system.o
    0x0800270c   0x0800270c   0x0000007c   Code   RO          803    .text.osRtxPostProcess  rtx_system.o
    0x08002788   0x08002788   0x00000144   Code   RO          823    .text.osRtxThreadDelayTick  rtx_thread.o
    0x080028cc   0x080028cc   0x000000e4   Code   RO          829    .text.osRtxThreadDispatch  rtx_thread.o
    0x080029b0   0x080029b0   0x00000054   Code   RO          907    .text.osRtxThreadFree  rtx_thread.o
    0x08002a04   0x08002a04   0x00000014   Code   RO          815    .text.osRtxThreadListGet  rtx_thread.o
    0x08002a18   0x08002a18   0x0000002a   Code   RO          813    .text.osRtxThreadListPut  rtx_thread.o
    0x08002a42   0x08002a42   0x00000018   Code   RO          819    .text.osRtxThreadListRemove  rtx_thread.o
    0x08002a5a   0x08002a5a   0x0000005a   Code   RO          817    .text.osRtxThreadListSort  rtx_thread.o
    0x08002ab4   0x08002ab4   0x00000096   Code   RO          885    .text.osRtxThreadPostProcess  rtx_thread.o
    0x08002b4a   0x08002b4a   0x00000002   PAD
    0x08002b4c   0x08002b4c   0x00000038   Code   RO          821    .text.osRtxThreadReadyPut  rtx_thread.o
    0x08002b84   0x08002b84   0x00000006   Code   RO          825    .text.osRtxThreadRegPtr  rtx_thread.o
    0x08002b8a   0x08002b8a   0x00000002   PAD
    0x08002b8c   0x08002b8c   0x0000001c   Code   RO          835    .text.osRtxThreadStackCheck  rtx_thread.o
    0x08002ba8   0x08002ba8   0x00000048   Code   RO          837    .text.osRtxThreadStartup  rtx_thread.o
    0x08002bf0   0x08002bf0   0x00000014   Code   RO          827    .text.osRtxThreadSwitch  rtx_thread.o
    0x08002c04   0x08002c04   0x000000d0   Code   RO          833    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x08002cd4   0x08002cd4   0x0000008c   Code   RO          831    .text.osRtxThreadWaitExit  rtx_thread.o
    0x08002d60   0x08002d60   0x00000080   Code   RO          799    .text.osRtxTick_Handler  rtx_system.o
    0x08002de0   0x08002de0   0x00000020   Code   RO          935    .text.osRtxTimerSetup  rtx_timer.o
    0x08002e00   0x08002e00   0x00000024   Code   RO          939    .text.osRtxTimerThread  rtx_timer.o
    0x08002e24   0x08002e24   0x000000c8   Code   RO          937    .text.osRtxTimerTick  rtx_timer.o
    0x08002eec   0x08002eec   0x00000018   Code   RO          869    .text.osThreadExit  rtx_thread.o
    0x08002f04   0x08002f04   0x00000084   Code   RO          877    .text.osThreadFlagsSet  rtx_thread.o
    0x08002f88   0x08002f88   0x00000044   Code   RO          883    .text.osThreadFlagsWait  rtx_thread.o
    0x08002fcc   0x08002fcc   0x00000044   Code   RO          841    .text.osThreadNew   rtx_thread.o
    0x08003010   0x08003010   0x00000034   Code   RO          110    .text.svcRtxDelay   rtx_delay.o
    0x08003044   0x08003044   0x0000000c   Code   RO          520    .text.svcRtxKernelGetState  rtx_kernel.o
    0x08003050   0x08003050   0x00000028   Code   RO          544    .text.svcRtxKernelGetSysTimerCount  rtx_kernel.o
    0x08003078   0x08003078   0x00000014   Code   RO          536    .text.svcRtxKernelGetTickCount  rtx_kernel.o
    0x0800308c   0x0800308c   0x0000014c   Code   RO          550    .text.svcRtxKernelInitialize  rtx_kernel.o
    0x080031d8   0x080031d8   0x00000098   Code   RO          552    .text.svcRtxKernelStart  rtx_kernel.o
    0x08003270   0x08003270   0x000001b4   Code   RO          715    .text.svcRtxMessageQueueGet  rtx_msgqueue.o
    0x08003424   0x08003424   0x0000022c   Code   RO          679    .text.svcRtxMessageQueueNew  rtx_msgqueue.o
    0x08003650   0x08003650   0x00000148   Code   RO          713    .text.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x08003798   0x08003798   0x000000ec   Code   RO          749    .text.svcRtxMutexAcquire  rtx_mutex.o
    0x08003884   0x08003884   0x000000d0   Code   RO          755    .text.svcRtxMutexDelete  rtx_mutex.o
    0x08003954   0x08003954   0x000000a0   Code   RO          745    .text.svcRtxMutexNew  rtx_mutex.o
    0x080039f4   0x080039f4   0x00000100   Code   RO          751    .text.svcRtxMutexRelease  rtx_mutex.o
    0x08003af4   0x08003af4   0x000000a8   Code   RO          911    .text.svcRtxThreadExit  rtx_thread.o
    0x08003b9c   0x08003b9c   0x00000140   Code   RO          919    .text.svcRtxThreadFlagsSet  rtx_thread.o
    0x08003cdc   0x08003cdc   0x000000ec   Code   RO          925    .text.svcRtxThreadFlagsWait  rtx_thread.o
    0x08003dc8   0x08003dc8   0x0000028c   Code   RO          839    .text.svcRtxThreadNew  rtx_thread.o
    0x08004054   0x08004054   0x0000002c   Code   RO            8    .text.thrButton     blinky.o
    0x08004080   0x08004080   0x0000006e   Code   RO            6    .text.thrLED        blinky.o
    0x080040ee   0x080040ee   0x00000002   PAD
    0x080040f0   0x080040f0   0x000000c8   Code   RO         1017    .text.vioGetSignal  vio_stm32g071b-disco.o
    0x080041b8   0x080041b8   0x00000078   Code   RO         1011    .text.vioInit       vio_stm32g071b-disco.o
    0x08004230   0x08004230   0x0000008c   Code   RO         1015    .text.vioSetSignal  vio_stm32g071b-disco.o
    0x080042bc   0x080042bc   0x000001f6   Code   RO         1503    .text_divfast       c_p.l(aeabi_sdivfast.o)
    0x080044b2   0x080044b2   0x00000002   PAD
    0x080044b4   0x080044b4   0x00000070   Data   RO          592    .rodata             rtx_lib.o
    0x08004524   0x08004524   0x00000038   Data   RO          595    .rodata             rtx_lib.o
    0x0800455c   0x0800455c   0x00000040   Data   RO         1481    .rodata.AHBPrescTable  system_stm32g0xx.o
    0x0800459c   0x0800459c   0x00000018   Data   RO         1077    .rodata.EventRecorderInfo  eventrecorder.o
    0x080045b4   0x080045b4   0x00000005   Data   RO           88    .rodata.JOY_IRQn    stm32g071b_discovery.o
    0x080045b9   0x080045b9   0x00000001   PAD
    0x080045ba   0x080045ba   0x0000000a   Data   RO           87    .rodata.JOY_PIN     stm32g071b_discovery.o
    0x080045c4   0x080045c4   0x00000008   Data   RO           85    .rodata.LED_PIN     stm32g071b_discovery.o
    0x080045cc   0x080045cc   0x00000004   Data   RO          594    .rodata.osRtxUserSVC  rtx_lib.o
    0x080045d0   0x080045d0   0x00000024   Data   RO          589    .rodata.os_idle_thread_attr  rtx_lib.o
    0x080045f4   0x080045f4   0x00000018   Data   RO          591    .rodata.os_timer_mq_attr  rtx_lib.o
    0x0800460c   0x0800460c   0x00000024   Data   RO          590    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08004630   0x08004630   0x0000000b   Data   RO          564    .rodata.str1.4      rtx_kernel.o
    0x0800463b   0x0800463b   0x00000001   PAD
    0x0800463c   0x0800463c   0x00000020   Data   RO         1844    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08004660, Size: 0x00006bc0, Max: 0x00008800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08004660   0x00000014   Data   RW           86    .data.JOY_PORT      stm32g071b_discovery.o
    0x20000014   0x08004674   0x00000010   Data   RW           84    .data.LED_PORT      stm32g071b_discovery.o
    0x20000024   0x08004684   0x00000004   Data   RW         1480    .data.SystemCoreClock  system_stm32g0xx.o
    0x20000028   0x08004688   0x000000a4   Data   RW          565    .data.os            rtx_kernel.o
    0x200000cc   0x0800472c   0x00000001   Data   RW         1155    .data.uwTickFreq    stm32g0xx_hal.o
    0x200000cd   0x0800472d   0x00000003   PAD
    0x200000d0   0x08004730   0x00000004   Data   RW         1154    .data.uwTickPrio    stm32g0xx_hal.o
    0x200000d4   0x08004734   0x00000004   PAD
    0x200000d8        -       0x00000060   Zero   RW         1699    .bss                c_p.l(libspace.o)
    0x20000138        -       0x00000004   Zero   RW           28    .bss.HAL_GetTick.ticks  main.o
    0x2000013c   0x08004734   0x00000004   PAD
    0x20000140        -       0x00005e00   Zero   RW          588    .bss.os             rtx_lib.o
    0x20005f40        -       0x00000001   Zero   RW          991    .bss.os             os_systick.o
    0x20005f41   0x08004734   0x00000003   PAD
    0x20005f44        -       0x00000034   Zero   RW          600    .bss.os.msgqueue.cb  rtx_lib.o
    0x20005f78        -       0x00000050   Zero   RW          601    .bss.os.msgqueue.mem  rtx_lib.o
    0x20005fc8        -       0x00000088   Zero   RW          597    .bss.os.thread.cb   rtx_lib.o
    0x20006050        -       0x00000200   Zero   RW          598    .bss.os.thread.idle.stack  rtx_lib.o
    0x20006250        -       0x00000200   Zero   RW          599    .bss.os.thread.timer.stack  rtx_lib.o
    0x20006450        -       0x00000001   Zero   RW          602    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x20006451   0x08004734   0x00000003   PAD
    0x20006454        -       0x00000004   Zero   RW           11    .bss.tid_thrButton  blinky.o
    0x20006458        -       0x00000004   Zero   RW           10    .bss.tid_thrLED     blinky.o
    0x2000645c   0x08004734   0x00000004   PAD
    0x20006460        -       0x00000008   Zero   RW         1040    .bss.vioAddrIPv4    vio_stm32g071b-disco.o
    0x20006468        -       0x00000020   Zero   RW         1041    .bss.vioAddrIPv6    vio_stm32g071b-disco.o
    0x20006488        -       0x00000100   Zero   RW         1037    .bss.vioPrintMem    vio_stm32g071b-disco.o
    0x20006588        -       0x00000004   Zero   RW         1035    .bss.vioSignalIn    vio_stm32g071b-disco.o
    0x2000658c        -       0x00000004   Zero   RW         1036    .bss.vioSignalOut   vio_stm32g071b-disco.o
    0x20006590        -       0x0000000c   Zero   RW         1038    .bss.vioValue       vio_stm32g071b-disco.o
    0x2000659c        -       0x00000024   Zero   RW         1039    .bss.vioValueXYZ    vio_stm32g071b-disco.o
    0x200065c0        -       0x00000200   Zero   RW         1467    HEAP                startup_stm32g071xx.o
    0x200067c0        -       0x00000400   Zero   RW         1466    STACK               startup_stm32g071xx.o


    Execution Region RW_RAM1 (Exec base: 0x20008800, Load base: 0x08004738, Size: 0x000004e4, Max: 0x00000800, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20008800        -       0x00000001   Zero   RW         1078    .bss.SysTimerState  eventrecorder.o
    0x20008801        -       0x00000001   Zero   RW         1079    .bss.TS_OverflowLock  eventrecorder.o
    0x20008802   0x08004738   0x0000003e   PAD
    0x20008840        -       0x000004a4   Zero   RW         1076    .bss.noinit         eventrecorder.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       226         24          0          0          8       3033   blinky.o
      1484         64         24          0       1190      20693   eventrecorder.o
       200         12          0          0          0        828   irq_armv6m.o
       248          8          0          0          4       3606   main.o
       162         24          0          0          1       3409   os_systick.o
         4          0          0          0          0        697   rtx_config.o
       104          4          0          0          0       3150   rtx_delay.o
      1370        228          0          0          0      37746   rtx_evr.o
       828         48         11        164          0      16825   rtx_kernel.o
       414          4        268          0      25357       7917   rtx_lib.o
       294          0          0          0          0       2936   rtx_memory.o
       196          0          0          0          0      18242   rtx_mempool.o
      2162         40          0          0          0      23699   rtx_msgqueue.o
      1244         32          0          0          0      10614   rtx_mutex.o
       380         14          0          0          0       5135   rtx_system.o
      3160         98          0          0          0      40809   rtx_thread.o
       268          8          0          0          0      11691   rtx_timer.o
        56         26        188          0       1536        676   startup_stm32g071xx.o
       408         46         23         36          0       7179   stm32g071b_discovery.o
       160          8          0          5          0       7905   stm32g0xx_hal.o
       132         16          0          0          0       7020   stm32g0xx_hal_cortex.o
       434         20          0          0          0       5157   stm32g0xx_hal_gpio.o
        80          4          0          0          0       2283   stm32g0xx_hal_msp.o
        80          8          0          0          0       7288   stm32g0xx_hal_pwr_ex.o
      1616         76          0          0          0       9553   stm32g0xx_hal_rcc.o
         4          0          0          0          0        536   stm32g0xx_it.o
       160         28         64          4          0       2349   system_stm32g0xx.o
       460         28          0          0        352       5461   vio_stm32g071b-disco.o

    ----------------------------------------------------------------------
     16348        868        612        212      28528     266437   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        14          0          2          3         80          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         68   aeabi_memset4.o
       502          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      1052         16          0          0         96        960   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1044         16          0          0         96        960   c_p.l

    ----------------------------------------------------------------------
      1052         16          0          0         96        960   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     17400        884        612        212      28624     266569   Grand Totals
     17400        884        612        212      28624     266569   ELF Image Totals
     17400        884        612        212          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                18012 (  17.59kB)
    Total RW  Size (RW Data + ZI Data)             28836 (  28.16kB)
    Total ROM Size (Code + RO Data + RW Data)      18224 (  17.80kB)

==============================================================================

